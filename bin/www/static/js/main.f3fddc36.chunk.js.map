{"version":3,"sources":["pages/login.js","pages/temp.js","pages/objectlist.js","pages/Customerlist.js","pages/addcustomer.js","pages/bojectadd.js","pages/addboject.js","pages/giftlist.js","pages/addAdmin.js","pages/admin.js","pages/index.js","pages/addcustomerlist.js","pages/blacklist.js","pages/addauto.js","pages/auto.js","pages/myadmin.js","pages/usergifts.js","router/Router.js","index.js"],"names":["createForm","Form","create","FormItem","Item","Login","props","handleSubmit","bind","toindex","e","preventDefault","data","this","form","getFieldValue","history","Axios","post","then","response","code","push","console","log","getFieldProps","style","paddingTop","height","width","inline","onSubmit","label","placeholder","type","htmlType","React","Component","SubMenu","Menu","Temp","span","theme","onClick","handleClick","defaultOpenKeys","mode","key","title","to","fun_date","AddDayCount","dd","Date","setDate","getDate","getFullYear","getMonth","ObjiectList","deleteObj","id","self","res","state","setState","filter","item","Id","message","success","error","copyobj","rest","handleTableChange","pagination","filters","sorter","pager","current","getlist","search","handleChange","columns","dataIndex","render","text","record","domain","window","location","host","copy","moment","format","onConfirm","href","className","buildtimebutton","value","rangetime","loading","page","total","Count","List","event","target","i","newtimes","map","col","editable","onCell","handleSave","timedatas","backgroundColor","paddingLeft","onChange","textAlign","dataSource","CustomerList","deleteuser","ID","scrollToAnchor","anchorName","anchorElement","document","getElementById","scrollIntoView","mao","validateFields","err","values","max","min","randotitck","showModal","visible","handleOk","handleCancel","plustitck","stopvote","setVotestaus","parseInt","match","params","query","Titckinput","objtitle","star","staus","objid","getobject","num","data_","Titcks","Moneys","Title","Star","newdatalist","index","newdata","uid","userid","Votestaus","src","titckinput","giftinput","plusgist","Staus","color","keepvote","Name","getFieldDecorator","onOk","onCancel","labelCol","wrapperCol","rules","required","offset","beforeUpload","file","isJpgOrPng","isLt2M","size","Addcustomer","forminit","setFieldsValue","Phone","Describe","image1","Image1","image2","Image2","image3","Image3","image4","Image4","image5","Image5","handleEnterKey","keyCode","handleChangeimage1","info","status","handleChangeimage2","handleChangeimage3","handleChangeimage4","handleChangeimage5","action","url","msg","path","pathname","normFile","Array","isArray","fileList","customerinit","addEventListener","removeEventListener","handleEenterKey","uploadButton1","loading1","name","listType","showUploadList","alt","valuePropName","locale","TabPane","Tabs","RangePicker","DatePicker","MonthPicker","beforeAudio","alert","beforeUploadvideo","isLt1000M","Addobject","handleChangeimages","imageUrl","handleChangeAudio","Audio","handleChangeimagestop1","topimageUrl1","handleChangeimagestop2","topimageUrl2","handleChangeimagestop3","topimageUrl3","handleChangevoide","videoUrl","loading2","editorState1","editorState2","join","toHTML","Ratio","Shaerdescribe","Sharetitle","Click","Baominginfo","avmoments","Avstart","Avend","vomoments","Votestart","Voteend","moneymoments","Moneystart","Moneyend","Interval","BaomingCost","Roll","diamonds","Diamonds","split","k","Shaerimage","Topimage1","Topimage2","Topimage3","Video","BraftEditor","createEditorState","Ruledescribe","Prizedescribe","add","nextKeys","concat","keys","remove","handleEditorChange1","handleEditorChange2","atcion","objectinit","loadingtop1","loadingtop2","loadingtop3","uploadButton","uploadButtontop1","uploadButtontop2","uploadButtontop3","rangeConfig","formItemLayout","initialValue","formItems","validateTrigger","marginRight","length","tab","whitespace","showTime","contentStyle","GiftList","AddAdmin","username","pswd","Admin","deleteadmin","red","pagemap","sleep","ms","Promise","resolve","setTimeout","AddcustomerList","addcustome","addcustomelist","image","multiple","tip","spinning","delay","BlaskList","getiplist","deleteip","ip","margin","bordered","renderItem","Addauto","interval","click","Auto","deleteauto","Objid","Myadmin","adminit","usernam","paswd","money","ispswd","Username","Paswd","Money","fontSize","UserGifts","Root","exact","component","ReactDOM"],"mappings":"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","file":"static/js/main.f3fddc36.chunk.js","sourcesContent":["import React,{Fragment} from 'react'\r\nimport { Form, Input, Button, Checkbox,Row, Col,Upload } from 'antd';\r\nimport Axios from 'axios';\r\nconst createForm = Form.create;\r\nconst FormItem = Form.Item;\r\nfunction getCookie(name) \r\n{ \r\n    var arr,reg=new RegExp(\"(^| )\"+name+\"=([^;]*)(;|$)\");\r\n \r\n    if(arr=document.cookie.match(reg))\r\n \r\n        return unescape(arr[2]); \r\n    else \r\n        return null; \r\n} \r\nclass Login extends  React.Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.handleSubmit=this.handleSubmit.bind(this)\r\n    this.toindex=this.toindex.bind(this)\r\n    \r\n  }\r\n  \r\n  handleSubmit(e) {\r\n    e.preventDefault();\r\n    \r\n    var username=this.props.form.getFieldValue(\"username\");\r\n    var password=this.props.form.getFieldValue(\"password\");\r\n    var url=\"/admin/login\"\r\n    var data={\r\n      \"username\":username,\r\n      \"paswd\":password\r\n    }\r\n    var history=this.props.history\r\n    Axios.post(url,data).then(\r\n      function(response){\r\n        if(response.data.code==0){\r\n         \r\n          history.push(\"/index\")\r\n        }\r\n      })\r\n   \r\n\r\n  }\r\n  toindex(){\r\n    console.log(this.props)\r\n  }\r\n\r\n      render(){\r\n        const { getFieldProps } = this.props.form;\r\n        return (\r\n          \r\n          <div style={{paddingTop:100,\"padding-left\":\"30%\"}}>\r\n          \r\n          <div style={{height:300,width:300,}}>\r\n\r\n          <Form inline onSubmit={this.handleSubmit.bind(this)}>\r\n            <FormItem\r\n              label=\"账户：\">\r\n              <Input placeholder=\"请输入账户名\"\r\n                {...getFieldProps('username')} />\r\n            </FormItem>\r\n            <FormItem\r\n              label=\"密码：\">\r\n              <Input type=\"password\" placeholder=\"请输入密码\"\r\n                {...getFieldProps('password')} />\r\n            </FormItem>\r\n            <Button type=\"primary\" htmlType=\"submit\">登录</Button>\r\n            \r\n          </Form>\r\n          </div>\r\n          </div>\r\n        );\r\n\r\n      }\r\n\r\n        \r\n    \r\n}\r\n\r\nLogin = createForm()(Login);\r\n\r\nexport default Login;","import React,{Fragment} from 'react'\r\nimport { Menu, Icon, Switch,Row, Col  } from 'antd';\r\nimport {Link} from 'react-router-dom'\r\nconst SubMenu = Menu.SubMenu;\r\n\r\nclass Temp extends React.Component{\r\n    \r\n    constructor(props){\r\n        super(props)\r\n    }\r\n    render(){\r\n\r\n        return(\r\n            \r\n        <Col span={4}>\r\n                        <div>\r\n                      \r\n                        <Menu theme=\"light\"\r\n                        \r\n                        onClick={this.handleClick}\r\n                        style={{ width: \"100%\" ,height:\"100%\"}}\r\n                        defaultOpenKeys={['sub2',\"sub4\"]}\r\n                      \r\n                        mode=\"inline\">\r\n                       \r\n                        <SubMenu key=\"sub2\" title={<span><Icon type=\"appstore\" /><span>基础设置</span></span>}>\r\n                        <Menu.Item key=\"6\"><Link to=\"/admin\">账号管理</Link></Menu.Item>\r\n                        <Menu.Item key=\"7\"><Link to=\"/myadmin\">个人中心</Link></Menu.Item>\r\n\r\n                       \r\n                            </SubMenu>\r\n                      \r\n                        <SubMenu key=\"sub4\" title={<span><Icon type=\"setting\" /><span>微活动</span></span>}>\r\n                        <Menu.Item key=\"8\" ><Link to=\"/index\">钻石投票</Link></Menu.Item>\r\n                       <Menu.Item key=\"9\" > <Link to=\"/gifts\"> 礼物列表 </Link></Menu.Item>\r\n                       <Menu.Item key=\"10\" > <Link to=\"/blacklist\"> 拦截列表 </Link></Menu.Item>\r\n                       <Menu.Item key=\"11\" > <Link to=\"/auto\"> 任务列表 </Link></Menu.Item>\r\n                        </SubMenu>\r\n                        </Menu>\r\n                    </div>\r\n                </Col>\r\n               \r\n         \r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default Temp","import React,{Fragment} from 'react'\r\nimport { Row,Breadcrumb,Table, Icon,Input,Col,Button,Popconfirm ,message } from 'antd';\r\nimport {Link} from 'react-router-dom'\r\nimport Axios from 'axios';\r\nimport Temp from './temp'\r\nimport copy from 'copy-to-clipboard';\r\nimport moment from 'moment';\r\n\r\nfunction fun_date(AddDayCount){\r\n  var dd = new Date();\r\n  dd.setDate(dd.getDate()+AddDayCount);//获取AddDayCount天后的日期\r\n  var y = dd.getFullYear();\r\n  var m = (dd.getMonth()+1)<10?\"0\"+(dd.getMonth()+1):(dd.getMonth()+1);//获取当前月份的日期，不足10补0\r\n  var d = dd.getDate()<10?\"0\"+dd.getDate():dd.getDate();//获取当前几号，不足10补0\r\n  return y+\"-\"+m+\"-\"+d;\r\n}\r\n  \r\nclass ObjiectList extends React.Component{\r\n  deleteObj= id =>{\r\n    var url=\"/object/delete\"\r\n    var self=this\r\n    Axios.post(url,{\"id\":id}).then((res)=>{\r\n  \r\n      if(res.data.code==0){\r\n        const data = [...self.state.data];\r\n        this.setState({ data: data.filter(item => item.Id !== id)});\r\n        message.success('删除成功');\r\n\r\n      }else{\r\n        message.error('删除失败');\r\n\r\n      }\r\n  \r\n    }\r\n    )\r\n  \r\n  };\r\n   rest(){\r\n    const pager = { ...this.state.pagination };\r\n    pager.current = 1;\r\n    this.setState({\r\n      pagination: pager,\r\n    });\r\n    this.getlist(1,this.state.search)\r\n   }\r\n   copyobj =id=> {\r\n    var url=\"/object/copy\"\r\n    Axios.post(url,{\"id\":id}).then((res)=>{\r\n      if(res.data.code==0){\r\n       this.rest()\r\n\r\n      }else{\r\n        message.error('复制失败');\r\n\r\n      }\r\n  \r\n    }\r\n    )\r\n  };\r\n  \r\n \r\n  constructor(props){\r\n    super(props)\r\n    this.getlist=this.getlist.bind(this)\r\n    this.handleChange=this.handleChange.bind(this)\r\n\r\n    this.rest=this.rest.bind(this)\r\n   \r\n    this.columns = [{\r\n      title: 'ID',\r\n      dataIndex: 'Id',\r\n      key: 'Id',\r\n    },{\r\n      title: '活动名称',\r\n      dataIndex: 'Title',\r\n      key: 'Title',\r\n      render(text,record) {\r\n        return <a onClick={\r\n          ()=>{\r\n            var domain = window.location.host+\"/wx/index/\"+record.Id;\r\n            copy(domain)\r\n            message.success(\"复制链接成功\")\r\n\r\n          }\r\n        }>{text}</a>;\r\n      }\r\n    }, {\r\n      title: '开始时间',\r\n      dataIndex: 'Avstart',\r\n      key: 'Avstart',\r\n      render(text){\r\n        var newtext=  moment(text).format('YYYY-MM-DD HH:mm:ss')\r\n        return(newtext)\r\n        \r\n      }\r\n    }, {\r\n      title: '结束时间',\r\n      dataIndex: 'Avend',\r\n      key: 'Avend',\r\n      render(text){\r\n        var newtext=  moment(text).format('YYYY-MM-DD HH:mm:ss')\r\n        return(newtext)\r\n        \r\n      }\r\n    }, \r\n    {\r\n        title: '票数',\r\n        dataIndex: 'Titcksum',\r\n        key: 'Titcksum',\r\n      }, \r\n      {\r\n        title: '点击数',\r\n        dataIndex: 'Click',\r\n        key: 'Click',\r\n      }, \r\n      {\r\n        title: '礼物数',\r\n        dataIndex: 'Moneysum',\r\n        key: 'Moneysum',\r\n      }, \r\n      {\r\n        title: '参加人数',\r\n        dataIndex: 'Usernum',\r\n        key: 'Usernum',\r\n      },\r\n    {\r\n      title: '操作',\r\n      key: 'operation',\r\n      render:(text, record) => {\r\n       console.log(this)\r\n        return (\r\n          <span>\r\n            <Popconfirm title=\"确定要删除吗?\" onConfirm={() =>this.deleteObj(record.Id)}>\r\n            <a href=\"javascript:;\">删除</a>\r\n            </Popconfirm>\r\n            <br/>\r\n            <span className=\"ant-divider\"></span>\r\n            <a onClick={\r\n              ()=>this.copyobj(record.Id)\r\n            }>复制</a>\r\n            <br/>\r\n            <span className=\"ant-divider\"></span>\r\n            <Link to={\"/addobject/\"+record.Id}>编辑</Link>\r\n            <br/>\r\n            <span className=\"ant-divider\"></span>\r\n            <Link to={\"/customerlist/\"+record.Id+\"/1\"}>选手管理</Link>\r\n          </span>\r\n        );\r\n      }\r\n    }];\r\n   this.buildtimebutton=this.buildtimebutton.bind(this)\r\n    \r\n    this.state = {\r\n      value:\"\",\r\n      search:\"\",\r\n      data: [],\r\n      rangetime:\"\",\r\n      pagination: {},\r\n      loading: false,\r\n    };\r\n\r\n  }\r\n \r\n  componentDidMount(){\r\n  \r\n    \r\n      this.getlist(1,this.state.search)\r\n  }\r\n  getlist(page,search) {\r\n    var url=\"/object/list\"\r\n    var self=this\r\n    this.setState({ loading: true });\r\n    Axios.post(url,{\"page\":page,\"search\":search,\"rangetime\":this.state.rangetime}).then(\r\n      function(response){\r\n\r\n        if(response.data.code==0){\r\n          var pagination = { ...self.state.pagination };\r\n          pagination.total = response.data.data.Count;\r\n          self.setState({\r\n            loading: false,\r\n            data:response.data.data.List,\r\n            pagination:pagination\r\n          })\r\n        }\r\n      })\r\n\r\n    }\r\n    handleTableChange = (pagination, filters, sorter) => {\r\n      const pager = { ...this.state.pagination };\r\n      pager.current = pagination.current;\r\n      this.setState({\r\n        pagination: pager,\r\n      });\r\n      this.getlist( pager.current,this.state.search)\r\n    }\r\n    handleChange(event) {\r\n      this.setState({value: event.target.value});\r\n    }\r\n    buildtimebutton(i){\r\n\r\n      var newtimes=fun_date(i)\r\n    return(<Button onClick={()=>{\r\n        this.setState({\r\n          search:\"\",\r\n          data: [],\r\n          rangetime:fun_date(i),\r\n          pagination: {},\r\n          loading: false,\r\n        }\r\n        ,()=>{\r\n          this.getlist(1,\"\")\r\n        })\r\n      }\r\n        \r\n      } >{newtimes}</Button>\r\n    )\r\n    \r\n    }\r\n    render(){\r\n      const columns = this.columns.map(col => {\r\n        if (!col.editable) {\r\n          return col;\r\n        }\r\n        return {\r\n          ...col,\r\n          onCell: record => ({\r\n            record,\r\n            editable: col.editable,\r\n            dataIndex: col.dataIndex,\r\n            title: col.title,\r\n            handleSave: this.handleSave,\r\n          }),\r\n        };\r\n      });\r\n      var timedatas=[\r\n        this.buildtimebutton(0),\r\n        this.buildtimebutton(1),\r\n        this.buildtimebutton(2),\r\n        this.buildtimebutton(3),\r\n        this.buildtimebutton(4),\r\n        this.buildtimebutton(5),\r\n        this.buildtimebutton(6)\r\n      ]\r\n     \r\n        return(\r\n          <Row>\r\n\r\n            <Temp />\r\n            <Col style={{backgroundColor:\"#ffffff\"}} span={20}>\r\n            <div style={{width:\"100%\"}}>\r\n            <Row>  \r\n                <Breadcrumb>\r\n                <Breadcrumb.Item>首页</Breadcrumb.Item>\r\n                <Breadcrumb.Item>微活动</Breadcrumb.Item>\r\n                <Breadcrumb.Item>钻石投票</Breadcrumb.Item>\r\n                 </Breadcrumb>\r\n             </Row>\r\n             <Row>\r\n            <div style={{paddingTop:20,paddingLeft:0}}>\r\n                <Row>\r\n                <Col span=\"10\" > <Input value={this.state.value} onChange={this.handleChange} placeholder=\"输入活动名称\" /></Col>\r\n                <Col span=\"4\" style={{paddingLeft:15}}> <Button onClick={\r\n                   ()=>{\r\n                    const pager = { ...this.state.pagination };\r\n                  \r\n                    const value=this.state.value\r\n                    console.log(value)\r\n                    this.setState(\r\n                      {\r\n                        search:value,\r\n                        pagination:{},\r\n                        data:[],\r\n                      }\r\n                    )\r\n                    \r\n                    this.getlist(1,value)\r\n                  }\r\n                }\r\n                >搜索</Button></Col>\r\n                <Col span=\"8\" style={{textAlign:\"right\"}}><Link to={\"/addobject/0\"}><Button >创建活动</Button></Link></Col>\r\n                </Row>\r\n          \r\n            </div>\r\n          \r\n             </Row>\r\n             <Row>\r\n               {timedatas}\r\n             </Row>\r\n            <Row>\r\n                <Table \r\n                columns={columns} \r\n                // rowKey={record => record.login.uuid}\r\n                dataSource={this.state.data}\r\n                loading={this.state.loading}\r\n                pagination={this.state.pagination}\r\n                onChange={this.handleTableChange}\r\n                />\r\n            </Row>\r\n            </div>\r\n            </Col>\r\n            </Row>\r\n        )\r\n    }\r\n}\r\nexport default ObjiectList","import React,{Fragment} from 'react'\r\nimport { Row,Breadcrumb,Table, Icon,Input,Col, Button,InputNumber, message,Popconfirm,Tag, Modal,Form} from 'antd';\r\nimport Axios from 'axios'\r\nimport {Link} from 'react-router-dom'\r\nimport Temp from './temp'\r\nimport moment from 'moment';\r\nclass CustomerList extends React.Component{\r\n\r\n  constructor(props){\r\n    super(props)\r\n    var id=0\r\n    \r\n    this.getlist=this.getlist.bind(this)\r\n    this.plustitck=this.plustitck.bind(this)\r\n    this.handleChange=this.handleChange.bind(this)\r\n    this.stopvote=this.stopvote.bind(this)\r\n    this.setVotestaus=this.setVotestaus.bind(this)\r\n    var page=parseInt(this.props.match.params.page)\r\n    var data=this.props.location.query\r\n    console.log(data)\r\n    var mao\r\n    if(data){\r\n\r\n      mao=data.mao\r\n    }else{\r\n      mao=\"\"\r\n    }\r\n    this.state={\r\n      id:parseInt(this.props.match.params.id),\r\n      data:[],\r\n      pagination: {\"current\":page},\r\n      loading: false,\r\n      Titckinput:1,\r\n      objtitle:\"\",\r\n      value:\"\",\r\n      search:\"\",\r\n      star:0,\r\n      mao:mao,\r\n      staus:\"\",\r\n      visible:false,\r\n      objid:parseInt(this.props.match.params.id),\r\n\r\n    }\r\n    this.getobject(parseInt(this.props.match.params.id))\r\n    \r\n    this.getlist(page,\"\",this.state.id)\r\n  }\r\n  componentDidUpdate(){\r\n    console.log(this.state.mao)\r\n    if(this.state.mao){\r\n      this.scrollToAnchor(this.state.mao)\r\n    }\r\n  }\r\n  randotitck(objid,max,min){\r\n\r\n    \r\n    Axios.post(\"/gift/rando\",{\"objid\":this.state.id,\"max\":max,\"min\":min}).then((res)=>{\r\n      if(res.data.code==0){\r\n        const pager = { ...this.state.pagination };\r\n        pager.current=1\r\n        this.setState({\r\n          pagination:pager\r\n        })\r\n        this.getlist(1,\"\",this.state.id)\r\n      }\r\n    })\r\n  }\r\n  plustitck(id,num){\r\n\r\n    var url=\"/gift/plustitck\"\r\n    this.setState({ loading: true });\r\n    Axios.post(url,{\"id\":id,\"objid\":this.state.id,\"num\":num}).then(\r\n      (res)=>{\r\n        if(res.data.code==0){\r\n          message.success(\"增加票数成功\")\r\n          var data_=this.state.data\r\n          this.setState({\r\n            data:data_.filter((item) => {\r\n              if (item.ID == id)\r\n              {\r\n                item.Titcks+=num\r\n                \r\n              }\r\n            \r\n              return item\r\n           })\r\n           ,loading:false})\r\n        }else{\r\n          message.error(\"接口调用失败\")\r\n        }\r\n      }\r\n    )\r\n  }\r\n  plusgist(id,num){\r\n    var url=\"/gift/plusgift\"\r\n    this.setState({ loading: true });\r\n    Axios.post(url,{\"id\":id,\"objid\":this.state.id,\"num\":num}).then(\r\n      (res)=>{\r\n        if(res.data.code==0){\r\n          message.success(\"增加票数成功\")\r\n          var data_=this.state.data\r\n          this.setState({\r\n            data:data_.filter((item) => {\r\n              if (item.ID == id)\r\n              {\r\n                item.Moneys+=num\r\n                \r\n              }\r\n            \r\n              return item\r\n           })\r\n           ,loading:false})\r\n        }else{\r\n          message.error(\"接口调用失败\")\r\n        }\r\n      }\r\n    )\r\n  }\r\n  deleteuser= id =>{\r\n    var url=\"/user/delete\"\r\n    var self=this\r\n    Axios.post(url,{\"id\":id}).then((res)=>{\r\n  \r\n      if(res.data.code==0){\r\n        const data = [...self.state.data];\r\n        this.setState({ data: data.filter(item => item.ID !== id) });\r\n        message.success('删除成功');\r\n\r\n      }else{\r\n        message.error('删除失败');\r\n\r\n      }\r\n  \r\n    }\r\n    )\r\n  \r\n  };\r\n  getobject(id){\r\n    var url=\"/object/get\"\r\n\r\n     Axios.post(url,{\"id\":id}).then((res)=>{\r\n      if(res.data.code==0){\r\n        this.setState({\r\n          objtitle:res.data.data.Title,\r\n          star:res.data.data.Star,\r\n          objid:res.data.data.ID,\r\n          \r\n        })\r\n      }\r\n     })\r\n  }\r\n  scrollToAnchor = (anchorName) => {\r\n    if (anchorName) {\r\n      let anchorElement = document.getElementById(anchorName);\r\n      if(anchorElement) { anchorElement.scrollIntoView();\r\n      this.setState({\r\n        mao:\"\"\r\n      }) }\r\n  }\r\n  }\r\n  getlist(page,search,objid) {\r\n    var url=\"/user/list\"\r\n    var self=this\r\n    this.setState({ loading: true });\r\n    Axios.post(url,{\"page\":page,\"search\":search,\"objid\":objid,\"sort\":\"titcks\",\"staus\":this.state.staus}).then(\r\n      function(response){\r\n\r\n\r\n        if(response.data.code==0){\r\n         \r\n          var pagination = { ...self.state.pagination };\r\n          pagination.total = response.data.data.Count;\r\n          var newdatalist=[]\r\n          for(var index in response.data.data.List){\r\n            var newdata=response.data.data.List[index]\r\n            newdata[\"titckinput\"]=0\r\n            newdata[\"giftinput\"]=0\r\n            newdatalist.push(newdata)\r\n          }\r\n          self.setState({\r\n            loading: false,\r\n            data:newdatalist,\r\n            pagination:pagination\r\n          })\r\n          \r\n        }\r\n      })\r\n\r\n    }\r\n    handleChange(event) {\r\n      this.setState({value: event.target.value});\r\n    }\r\n    \r\n    handleTableChange = (pagination, filters, sorter) => {\r\n      const pager = { ...this.state.pagination };\r\n      pager.current = pagination.current;\r\n      this.setState({\r\n        pagination: pager,\r\n      });\r\n      this.getlist( pager.current,this.state.search,this.state.id)\r\n    }\r\n    stopvote(uid){\r\n      \r\n      Axios.post(\"/user/stopvote\",{\"userid\":uid}).then((res)=>{\r\n\r\n        if (res.data.code==0){\r\n          message.success(\"暂停成功\")\r\n          this.setVotestaus(uid,\"no\")\r\n        }\r\n      })\r\n    }\r\n    keepvote(uid){\r\n      Axios.post(\"/user/keepvote\",{\"userid\":uid}).then((res)=>{\r\n\r\n        if (res.data.code==0){\r\n          message.success(\"继续成功\")\r\n          this.setVotestaus(uid,\"yes\")\r\n        }\r\n      })\r\n    }\r\n    setstar(objid,userid){\r\n      Axios.post(\"/object/setstar\",{\"userid\":userid,\"objid\":objid}).then((res)=>{\r\n\r\n        if (res.data.code==0){\r\n          message.success(\"设置今日之星成功\")\r\n          this.setState({\r\n            star:userid\r\n          })\r\n        }\r\n      })\r\n    }\r\n    \r\n    \r\n    setVotestaus(userid,staus){\r\n      var data=this.state.data\r\n      this.setState({\r\n        data:data.filter((item) => {\r\n          if (item.ID == userid)\r\n          {\r\n            item.Votestaus=staus\r\n          }\r\n        \r\n          return item\r\n       })\r\n       })\r\n    }\r\n    render(){\r\n      const columns = [\r\n        {title:\"编号\",\r\n        dataIndex:\"Mindex\",\r\n        key:\"Mindex\"  ,\r\n      },\r\n        {\r\n        title: '选手名称',\r\n        dataIndex: 'Name',\r\n        key: 'Name',\r\n        render(text) {\r\n          return <a href=\"\">{text}</a>;\r\n        }\r\n      },\r\n      {\r\n        title: '图片',\r\n        dataIndex: 'Image1',\r\n        key: 'Image1',\r\n        render(text) {\r\n          return <img style={{width:100,height:100}} src={text}></img>;\r\n        }\r\n      }, {\r\n        title: '手机号',\r\n        dataIndex: 'Phone',\r\n        key: 'Phone',\r\n      }, {\r\n        title: '票数',\r\n        dataIndex: 'Titcks',\r\n        key: 'Titcks',\r\n        render:(text, record)=>{\r\n          var id=record.ID\r\n          \r\n            return(\r\n                <span>\r\n                <label>当前{text}</label>\r\n                <InputNumber style={{width:100}} min={-100000} max={100000} onChange={\r\n                  (value)=>{\r\n                    \r\n                    var data_=this.state.data\r\n                   \r\n                  this.setState({\r\n                   data:data_.filter((item) => {\r\n                     if (item.ID == id)\r\n                     {\r\n                       item.titckinput=value\r\n                     }\r\n                   \r\n                     return item\r\n                  })\r\n                  })\r\n                \r\n                  }\r\n                }  value={record.titckinput} />\r\n                <Button onClick={()=>this.plustitck(record.ID,record.titckinput)} type=\"primary\">+</Button>\r\n                </span>\r\n            )\r\n        }\r\n      }, \r\n      {\r\n          title: '礼物',\r\n          dataIndex: 'Moneys',\r\n          key: 'Moneys',\r\n          render:(text,record)=>{\r\n            var id=record.ID\r\n            return(\r\n              <span>\r\n              <label>当前{text}</label>\r\n              <InputNumber style={{width:100}} min={0} max={100000} onChange={\r\n                (value)=>{\r\n                  \r\n                  var data_=this.state.data\r\n                 \r\n                this.setState({\r\n                 data:data_.filter((item) => {\r\n                   if (item.ID == id)\r\n                   {\r\n                     item.giftinput=value\r\n                   }\r\n                 \r\n                   return item\r\n                })\r\n                })\r\n              \r\n                }\r\n              }  value={record.giftinput} />\r\n              <Button onClick={()=>this.plusgist(record.ID,record.giftinput)} type=\"primary\">+</Button>\r\n              </span>\r\n            )\r\n        }\r\n        }, \r\n       \r\n        {\r\n          title: '参加时间',\r\n          dataIndex: 'CreatedAt',\r\n          key: 'CreatedAt',\r\n          render(text){\r\n            var newtext=  moment(text).format('YYYY-MM-DD HH:mm:ss')\r\n            return(newtext)\r\n            \r\n          }\r\n        }, \r\n        {\r\n            title: '状态',\r\n            dataIndex: 'staus',\r\n            key: 'staus',\r\n            render:(text, record)=> {\r\n              return(\r\n                <span>\r\n              { record.Staus!=\"yes\"?  <Tag color=\"#f50\">未审核</Tag>:<Tag color=\"#2db7f5\">已审核</Tag> }\r\n              <br/>\r\n               { record.Votestaus!=\"yes\"? <Tag color=\"#f50\">不可投票</Tag>:<Tag color=\"#2db7f5\">可投票</Tag> }\r\n               <br/>\r\n               {record.ID==this.state.star?<Tag color=\"red\">明日之星</Tag>:null}\r\n               </span>\r\n               \r\n              );\r\n            }\r\n          }, \r\n      {\r\n        title: '操作',\r\n        key: 'operation',\r\n        render:(text, record)=> {\r\n          return (\r\n            <span>\r\n              <Link id={record.ID} to={\"/addcustomer/\"+this.state.id+\"/\"+record.ID+\"/\"+this.state.pagination.current}><a href=\"#\">编辑</a></Link>\r\n              <br/>\r\n              <Popconfirm title=\"确定要删除吗?\" onConfirm={() =>this.deleteuser(record.ID)}>\r\n            <a href=\"javascript:;\">删除</a>\r\n            </Popconfirm>\r\n              <br/>\r\n              <span className=\"ant-divider\"></span>\r\n           {record.Votestaus==\"yes\"?<a onClick={()=>this.stopvote(record.ID)}>暂停投票</a>:<a onClick={()=>this.keepvote(record.ID)}>继续投票</a>  }\r\n             <br/>\r\n             <Link to={\"/usergifts/\"+record.ID+\"/\"+record.Name}><a >投票数据</a></Link> \r\n            </span>\r\n          );\r\n        }\r\n      }];\r\n      \r\n      const formItemLayout = {\r\n        labelCol: { span: 6 },\r\n        wrapperCol: { span: 14 },\r\n      };\r\n    const { getFieldDecorator } = this.props.form;\r\n      \r\n        return(\r\n          <Row>\r\n            <Temp/>\r\n            <Col style={{backgroundColor:\"#ffffff\"}} span={20}>\r\n            <div style={{width:\"100%\"}}>\r\n                  <Row>  \r\n                <Breadcrumb>\r\n                <Breadcrumb.Item>首页</Breadcrumb.Item>\r\n                <Breadcrumb.Item>微活动</Breadcrumb.Item>\r\n                <Breadcrumb.Item>钻石投票</Breadcrumb.Item>\r\n                <Breadcrumb.Item>活动列表</Breadcrumb.Item>\r\n                 </Breadcrumb>\r\n             </Row>\r\n             <Row style={{paddingTop:10}} >\r\n                 <Col span=\"10\">\r\n                     <h1>\r\n                         钻石投票\r\n                     </h1>\r\n                     </Col>\r\n                 <Col span=\"10\"></Col>\r\n             </Row>\r\n             <Row>\r\n             <Col span=\"10\"><h3>{\"活动【\"+this.state.objtitle+\"】列表\"}</h3></Col>\r\n             <Col span=\"13\" style={{textAlign:\"right\"}}>\r\n               \r\n             <Button type=\"primary\"><a href={\"/user/csv/\"+this.state.id}>导出</a></Button>\r\n             <Button type=\"primary\" onClick={()=>this.showModal()}>随机加票+</Button>\r\n             <Link to={\"/addcustomer/\"+this.state.id+\"/0/\"+this.state.page}>  <Button type=\"primary\">添加用户+</Button></Link>\r\n           \r\n             <Link to={\"/addcustomerlist/\"+this.state.id}><Button type=\"primary\">批量添加+</Button> </Link>\r\n             </Col>\r\n             </Row>\r\n             <Row>\r\n            <div style={{paddingTop:20,paddingLeft:0}}>\r\n                <Row>\r\n                <Col span=\"10\" > <Input value={this.state.value} onChange={this.handleChange} placeholder=\"输入活动名称\" /></Col>\r\n                <Col span=\"4\" style={{paddingLeft:15}}> <Button onClick={\r\n                   ()=>{\r\n                    const pager = { ...this.state.pagination };\r\n                  \r\n                    const value=this.state.value\r\n                    \r\n                    this.setState(\r\n                      {\r\n                        search:value,\r\n                        pagination:{},\r\n                        data:[],\r\n                      }\r\n                    )\r\n                    \r\n                    this.getlist(1,value,this.state.id)\r\n                  }\r\n                }\r\n                >搜索</Button></Col>\r\n                <Col span=\"4\" style={{paddingLeft:50}}>\r\n                <Button type=\"primary\"  onClick={()=>{\r\n                  if (this.state.staus==\"\"){\r\n                    this.setState({\r\n                    \r\n                        pagination:{},\r\n                        data:[],\r\n                      staus:\"no\"\r\n                    },()=>{\r\n                      this.getlist(1,\"\",this.state.id)\r\n                    })\r\n                  }else{\r\n                    this.setState({\r\n                      \r\n                        pagination:{},\r\n                        data:[],\r\n                      staus:\"\"\r\n                    },()=>{\r\n                      this.getlist(1,\"\",this.state.id)\r\n                    })\r\n                  }\r\n                  \r\n                 \r\n                }}>{this.state.staus==\"\"?\"未审核\":\"全部\"}</Button>\r\n                </Col>\r\n          \r\n                </Row>\r\n          \r\n            </div>\r\n          \r\n             </Row>\r\n             <Row>\r\n             <Table columns={columns} \r\n             dataSource={this.state.data}\r\n             loading={this.state.loading}\r\n             pagination={this.state.pagination}\r\n             onChange={this.handleTableChange}\r\n             />\r\n             </Row>\r\n            </div>\r\n            </Col>\r\n            <Modal  visible={this.state.visible}\r\n                onOk={this.handleOk}\r\n                onCancel={this.handleCancel}>\r\n            <Form {...formItemLayout} onSubmit={this.handleSubmit}>\r\n                        \r\n                        <Form.Item label=\"随机数最小值\">\r\n                        {getFieldDecorator('min', {\r\n                            rules: [\r\n                            {\r\n                                required: true,\r\n                                message: '不可为空',\r\n                              \r\n                            },\r\n                            \r\n                            ],\r\n                        })(<InputNumber />)}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"随机数最大值\">\r\n                        {getFieldDecorator('max', {\r\n                            rules: [\r\n                            {\r\n                                \r\n                                required: true,\r\n                                message: '不可为空',\r\n                            },\r\n                           \r\n                            ],\r\n                        })(<InputNumber />)}\r\n                        </Form.Item>\r\n                    \r\n                      \r\n                        <Form.Item wrapperCol={{ span: 12, offset: 6 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">提交</Button>\r\n                        </Form.Item>\r\n                       \r\n                        </Form>\r\n           \r\n            </Modal>\r\n            </Row>\r\n        )\r\n    }\r\n\r\n    handleSubmit = e => {\r\n      var data={}\r\n      e.preventDefault();\r\n      this.props.form.validateFields((err, values) => {\r\n      \r\n       var max=values[\"max\"]\r\n       var min=values[\"min\"]\r\n       this.randotitck(this.state.id,max,min)\r\n      \r\n      })\r\n   \r\n    };\r\n    showModal = () => {\r\n      this.setState({\r\n        visible: true,\r\n      });\r\n    };\r\n  \r\n    handleOk = e => {\r\n      console.log(e);\r\n      this.setState({\r\n        visible: false,\r\n      });\r\n    };\r\n  \r\n    handleCancel = e => {\r\n      console.log(e);\r\n      this.setState({\r\n        visible: false,\r\n      });\r\n    };\r\n    \r\n}\r\nconst createForm = Form.create;\r\n\r\nCustomerList = createForm()(CustomerList);\r\n\r\nexport default CustomerList","import React,{Fragment} from 'react'\r\nimport { Row,Breadcrumb,Table, Icon,Input,Col, Card, Form,Upload, InputNumber ,Button,message,Switch} from 'antd';\r\nimport TextArea from 'antd/lib/input/TextArea';\r\nimport Axios from 'axios'\r\nimport Temp from './temp'\r\nimport { timingSafeEqual } from 'crypto';\r\nconst createForm = Form.create;\r\nfunction beforeUpload(file) {\r\n    const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\r\n    if (!isJpgOrPng) {\r\n      message.error('You can only upload JPG/PNG file!');\r\n    }\r\n    const isLt2M = file.size / 1024 / 1024 < 1000;\r\n    if (!isLt2M) {\r\n      message.error('图片大小不能大于2M!');\r\n    }\r\n    return isJpgOrPng && isLt2M;\r\n  }\r\nclass Addcustomer extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n        var action=\"add\"\r\n        var id=0\r\n        this.customerinit=this.customerinit.bind(this)\r\n        var page=this.props.match.params.page\r\n        if (this.props.match.params.id!=0){\r\n  \r\n            action=\"up\"\r\n          id=this.props.match.params.id\r\n          this.customerinit(id)\r\n        }\r\n        this.state={\r\n            objid:parseInt(this.props.match.params.objid),\r\n            id:parseInt(id),\r\n            action:action,\r\n            page:page,\r\n            image1:\"\",\r\n            image2:\"\",\r\n            image3:\"\",\r\n            image4:\"\",\r\n            image5:\"\",\r\n        }\r\n        \r\n    }\r\n    customerinit(id){\r\n        var url=\"/user/get\"\r\n        Axios.post(url,{\"id\":parseInt(id)}).then((res)=>{\r\n          if(res.data.code==0){\r\n          \r\n          this.forminit(res.data.data)\r\n          }\r\n        })\r\n      }\r\n      forminit=data=>{\r\n       \r\n        const { form } = this.props;\r\n        \r\n        console.log(data)\r\n        form.setFieldsValue({\"name\":data.Name})\r\n        \r\n        form.setFieldsValue({\"phone\":data.Phone})\r\n        form.setFieldsValue({\"describe\":data.Describe})\r\n      \r\n        form.setFieldsValue({\"switch\":data.Staus==\"yes\"?true:false})\r\n        this.setState({\r\n            image1:data.Image1,\r\n            image2:data.Image2,\r\n            image3:data.Image3,\r\n            image4:data.Image4,\r\n            image5:data.Image5,\r\n        })\r\n    \r\n      }\r\n      componentDidMount(){\r\n        document.addEventListener(\"keydown\",this.handleEnterKey);\r\n    }\r\n    componentWillUmount(){\r\n        document.removeEventListener(\"keydown\",this.handleEenterKey);\r\n    }\r\n    handleEnterKey = (e) => {\r\n        if(e.keyCode === 13){\r\n          this.handleSubmit(e)\r\n         \r\n\r\n        }\r\n    }\r\n      handleChangeimage1 = info => {\r\n\r\n        console.log(info)\r\n        if (info.file.status === 'uploading') {\r\n          this.setState({ loading: true });\r\n          return;\r\n        }\r\n        \r\n        if (info.file.response.code === 0) {\r\n          // Get this url from response in real world.\r\n          this.setState({\r\n            image1:info.file.response.data,\r\n            loading: false,\r\n          })\r\n        }else{\r\n          message.error('上传失败!');\r\n        }\r\n      };\r\n      handleChangeimage2 = info => {\r\n\r\n        console.log(info)\r\n        if (info.file.status === 'uploading') {\r\n          this.setState({ loading: true });\r\n          return;\r\n        }\r\n        \r\n        if (info.file.response.code === 0) {\r\n          // Get this url from response in real world.\r\n          this.setState({\r\n            image2:info.file.response.data,\r\n            loading: false,\r\n          })\r\n        }else{\r\n          message.error('上传失败!');\r\n        }\r\n      };\r\n      handleChangeimage3 = info => {\r\n\r\n        console.log(info)\r\n        if (info.file.status === 'uploading') {\r\n          this.setState({ loading: true });\r\n          return;\r\n        }\r\n        \r\n        if (info.file.response.code === 0) {\r\n          // Get this url from response in real world.\r\n          this.setState({\r\n            image3:info.file.response.data,\r\n            loading: false,\r\n          })\r\n        }else{\r\n          message.error('上传失败!');\r\n        }\r\n      };\r\n      handleChangeimage4 = info => {\r\n\r\n        console.log(info)\r\n        if (info.file.status === 'uploading') {\r\n          this.setState({ loading: true });\r\n          return;\r\n        }\r\n        \r\n        if (info.file.response.code === 0) {\r\n          // Get this url from response in real world.\r\n          this.setState({\r\n            image4:info.file.response.data,\r\n            loading: false,\r\n          })\r\n        }else{\r\n          message.error('上传失败!');\r\n        }\r\n      };\r\n      handleChangeimage5 = info => {\r\n\r\n        console.log(info)\r\n        if (info.file.status === 'uploading') {\r\n          this.setState({ loading: true });\r\n          return;\r\n        }\r\n        \r\n        if (info.file.response.code === 0) {\r\n          // Get this url from response in real world.\r\n          this.setState({\r\n            image5:info.file.response.data,\r\n            loading: false,\r\n          })\r\n        }else{\r\n          message.error('上传失败!');\r\n        }\r\n      };\r\n      \r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.form.validateFields((err, values) => {\r\n          if (!err) {\r\n              \r\n           if(!values[\"name\"]){\r\n             return\r\n           }\r\n            var data={\r\n                \"name\":values[\"name\"],\r\n                \"phone\":values[\"phone\"],\r\n                \"objid\":this.state.objid,\r\n                \"describe\":values[\"describe\"],\r\n                \"image1\":this.state.image1,\r\n                \"image2\":this.state.image2,\r\n                \"image3\":this.state.image3,\r\n                \"image4\":this.state.image4,\r\n                \"image5\":this.state.image5,\r\n                \"staus\":values[\"switch\"]==true?\"yes\":\"no\",\r\n                \r\n            }\r\n            if(this.state.action==\"add\"){\r\n            var url=\"/user/add\"\r\n            Axios.post(url,data).then((res)=>{\r\n            if(res.data.code==0){\r\n              \r\n              this.props.history.push(\"/customerlist/\"+this.state.objid+\"/\"+1)\r\n            }else{\r\n              message.error(res.data.msg)\r\n            }\r\n          })\r\n            }else{\r\n                var url=\"/user/update\"\r\n                data[\"id\"]=this.state.id\r\n                Axios.post(url,data).then((res)=>{\r\n                    if(res.data.code==0){\r\n                      var path={\r\n                        pathname:\"/customerlist/\"+this.state.objid+\"/\"+this.state.page,\r\n                        query:{mao:this.state.id}\r\n                      }\r\n                      this.props.history.push(path)\r\n                    }else{\r\n                      message.error(res.data.msg)\r\n                    }\r\n                  })\r\n            \r\n            }\r\n          }\r\n        });\r\n      };\r\n      normFile = e => {\r\n        \r\n        if (Array.isArray(e)) {\r\n          return e;\r\n        }\r\n        console.log(e)\r\n     \r\n        return e && e.fileList;\r\n        \r\n     \r\n      };\r\n    \r\n    render(){\r\n        const uploadButton1 = (\r\n            <div>\r\n              <Icon type={this.state.loading1 ? 'loading' : 'plus'} />\r\n              <div className=\"ant-upload-text\">Upload</div>\r\n            </div>\r\n          );\r\n        const formItemLayout = {\r\n            labelCol: { span: 6 },\r\n            wrapperCol: { span: 14 },\r\n          };\r\n        const { getFieldDecorator } = this.props.form;\r\n        const {image1,image2,image3,image4,image5}=this.state\r\n        return(\r\n          <Row>\r\n          <Temp/>\r\n          <Col style={{backgroundColor:\"#ffffff\"}} span={20}>\r\n            <div style={{width:\"100%\"}}>\r\n             \r\n                <Row>\r\n                    <Card>\r\n                        <Form {...formItemLayout} onSubmit={this.handleSubmit}>\r\n                        <Form.Item  label=\"选手名称\">\r\n                            {getFieldDecorator('name', {\r\n                            rules: [\r\n                            {\r\n                             \r\n                                message: 'The input is not valid E-mail!',\r\n                            },\r\n                            {\r\n                                required: true,\r\n                                message: '请输入名称',\r\n                            },\r\n                            ],\r\n                        })(<Input />)}\r\n\r\n                        </Form.Item>\r\n                        <Form.Item label=\"手机号\">\r\n                        {getFieldDecorator('phone', {\r\n                            rules: [\r\n                            {\r\n                                \r\n                                message: '输入票数',\r\n                            },\r\n                            {\r\n                                required: true,\r\n                                message: 'Please input your phone'\r\n                            },\r\n                            ],\r\n                        })(<Input />)}\r\n                        </Form.Item>\r\n                        {/* <Form.Item label=\"票数\">\r\n                        \r\n                        {getFieldDecorator('tick')(<InputNumber min={0} max={100000000000} />)}\r\n                        </Form.Item> */}\r\n                        {/* <Form.Item label=\"点击数\">\r\n                        \r\n                        {getFieldDecorator('click')(<InputNumber min={0} max={100000000000} />)}\r\n                        </Form.Item> */}\r\n                         <Form.Item label=\"图片\">\r\n                             <Row> \r\n                                \r\n                                <Col span={4}>\r\n                                <div>\r\n                        <Upload\r\n                            name=\"avatar\"\r\n                            listType=\"picture-card\"\r\n                            className=\"avatar-uploader\"\r\n                            showUploadList={false}\r\n                            action=\"/image/upload\"\r\n                            beforeUpload={beforeUpload}\r\n                            onChange={this.handleChangeimage1}\r\n                        >\r\n                            {image1 ? <img src={image1} alt=\"avatar\" style={{ width: '100%' }} /> : uploadButton1}\r\n                        </Upload>\r\n                        </div></Col>\r\n                        <Col span={4}>\r\n                                <div>\r\n                        <Upload\r\n                            name=\"avatar\"\r\n                            listType=\"picture-card\"\r\n                            className=\"avatar-uploader\"\r\n                            showUploadList={false}\r\n                            action=\"/image/upload\"\r\n                            beforeUpload={beforeUpload}\r\n                            onChange={this.handleChangeimage2}\r\n                        >\r\n                            {image2 ? <img src={image2} alt=\"avatar\" style={{ width: '100%' }} /> : uploadButton1}\r\n                        </Upload>\r\n                        </div>\r\n                        </Col>\r\n                        <Col span={4}>\r\n                                <div>\r\n                        <Upload\r\n                            name=\"avatar\"\r\n                            listType=\"picture-card\"\r\n                            className=\"avatar-uploader\"\r\n                            showUploadList={false}\r\n                            action=\"/image/upload\"\r\n                            beforeUpload={beforeUpload}\r\n                            onChange={this.handleChangeimage3}\r\n                        >\r\n                            {image3 ? <img src={image3} alt=\"avatar\" style={{ width: '100%' }} /> : uploadButton1}\r\n                        </Upload>\r\n                        </div>\r\n                        </Col>\r\n                        <Col span={4}>\r\n                                <div>\r\n                        <Upload\r\n                            name=\"avatar\"\r\n                            listType=\"picture-card\"\r\n                            className=\"avatar-uploader\"\r\n                            showUploadList={false}\r\n                            action=\"/image/upload\"\r\n                            beforeUpload={beforeUpload}\r\n                            onChange={this.handleChangeimage4}\r\n                        >\r\n                            {image4 ? <img src={image4} alt=\"avatar\" style={{ width: '100%' }} /> : uploadButton1}\r\n                        </Upload>\r\n                        </div>\r\n                        </Col>\r\n                        <Col span={4}>\r\n                                <div>\r\n                        <Upload\r\n                            name=\"avatar\"\r\n                            listType=\"picture-card\"\r\n                            className=\"avatar-uploader\"\r\n                            showUploadList={false}\r\n                            action=\"/image/upload\"\r\n                            beforeUpload={beforeUpload}\r\n                            onChange={this.handleChangeimage5}\r\n                        >\r\n                            {image5 ? <img src={image5} alt=\"avatar\" style={{ width: '100%' }} /> : uploadButton1}\r\n                        </Upload>\r\n                        </div>\r\n                        </Col>\r\n                             </Row>\r\n                   \r\n                        </Form.Item>\r\n                        <Form.Item label=\"宣言\">    \r\n\r\n                                   {getFieldDecorator('describe', {\r\n                            rules: [\r\n                            {\r\n                                \r\n                                message: '输入票数',\r\n                            },\r\n                            {\r\n                                message: 'Please input your describe'\r\n                            },\r\n                            ],\r\n                        })(<TextArea />)}   \r\n                        </Form.Item >\r\n                        <Form.Item label=\"是否审核\"> \r\n                        {getFieldDecorator('switch', { valuePropName: 'checked' })(<Switch />)}\r\n\r\n                        </Form.Item>    \r\n                        <Form.Item wrapperCol={{ span: 12, offset: 6 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">提交</Button>\r\n                        </Form.Item>\r\n                       \r\n                       \r\n                        </Form>\r\n                    </Card>\r\n                </Row>\r\n\r\n            </div>\r\n            </Col>\r\n            </Row>\r\n        )\r\n    }\r\n\r\n}\r\nAddcustomer = createForm()(Addcustomer);\r\nexport default Addcustomer","import 'braft-editor/dist/index.css'\r\nimport React, { Fragment } from 'react'\r\nimport {Tabs, Icon, Input, Card, Form, Button, InputNumber,DatePicker,Upload,message,Row, Col } from 'antd';\r\nimport BraftEditor from 'braft-editor';\r\nimport TextArea from 'antd/lib/input/TextArea';\r\nimport Axios from 'axios';\r\nimport moment from 'moment';\r\nimport Temp from './temp'\r\nimport 'moment/locale/zh-cn';\r\nmoment.locale('zh-cn');\r\n\r\n\r\n\r\n\r\nconst { TabPane } = Tabs;\r\nconst { MonthPicker, RangePicker } = DatePicker;\r\nfunction getBase64(img, callback) {\r\n    const reader = new FileReader();\r\n    reader.addEventListener('load', () => callback(reader.result));\r\n    reader.readAsDataURL(img);\r\n  }\r\n  \r\n  function beforeUpload(file) {\r\n   \r\n    const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\r\n    if (!isJpgOrPng) {\r\n      message.error('You can only upload JPG/PNG file!');\r\n      return false\r\n    }\r\n    const isLt2M = file.size / 1024 / 1024 < 1000;\r\n    if (!isLt2M) {\r\n      message.error('图片大小不能大于2M!');\r\n      return false\r\n    }\r\n    return isJpgOrPng && isLt2M;\r\n  }\r\n  function beforeAudio(file) {\r\n    alert(file.type)\r\n    const isJpgOrPng = file.type === 'audio/mp3' || file.type === 'audio/mpeg';\r\n    if (!isJpgOrPng) {\r\n      message.error('You can only upload mp3 file!');\r\n      return false\r\n    }\r\n    const isLt2M = file.size / 1024 / 1024 < 1000;\r\n    if (!isLt2M) {\r\n      message.error('图片大小不能大于2M!');\r\n      return false\r\n    }\r\n    return isJpgOrPng && isLt2M;\r\n  }\r\n  function beforeUploadvideo(file) {\r\n    const isJpgOrPng = file.type === 'video/mp4' || file.type === 'video/ogg\"';\r\n    console.log(file.type)\r\n    if (!isJpgOrPng) {\r\n      message.error('格式错误，需要mp4格式!');\r\n      return false\r\n    }\r\n    const isLt1000M = file.size / 1024 / 1024 < 1000;\r\n    if (!isLt1000M) {\r\n      message.error('视频不能大于1000M');\r\n      return false\r\n    }\r\n    return isJpgOrPng && isLt1000M;\r\n  }\r\nlet id = 0;\r\nclass Addobject extends React.Component {\r\n\r\n  \r\n      \r\n     constructor(props){\r\n      super(props);\r\n      var atcion=\"add\"\r\n      var id=0\r\n      this.objectinit=this.objectinit.bind(this)\r\n      if (this.props.match.params.id!=0){\r\n\r\n        atcion=\"up\"\r\n        id=this.props.match.params.id\r\n        this.objectinit(id)\r\n      }\r\n      this.state = {\r\n        editorState1: BraftEditor.createEditorState(null),\r\n        editorState2:BraftEditor.createEditorState(null),\r\n        loading: false,\r\n        loading1:false,\r\n        loading2:false,\r\n        loadingtop1:false,\r\n        loadingtop2:false,\r\n        loadingtop3:false,\r\n        action:atcion,\r\n        id:id,\r\n        data:{}\r\n     }\r\n  }\r\n \r\n  componentDidMount(props){\r\n   \r\n  }\r\n  \r\n      objectinit(id){\r\n      \r\n        \r\n        var url=\"/object/get\"\r\n        Axios.post(url,{\"id\":parseInt(id)}).then((res)=>{\r\n          this.setState({\r\n            data:res.data.data\r\n          })\r\n          this.forminit(res.data.data)\r\n        })\r\n      }\r\n      handleChangeimages = info => {\r\n        if (info.file.status === 'uploading') {\r\n          this.setState({ loading: true });\r\n          return;\r\n        }\r\n        if (info.file.response.code === 0) {\r\n          // Get this url from response in real world.\r\n          this.setState({\r\n            imageUrl:info.file.response.data,\r\n            loading: false,\r\n          })\r\n        }else{\r\n          message.error('上传失败!');\r\n        }\r\n      };\r\n      handleChangeAudio=info=>{\r\n        if (info.file.status === 'uploading') {\r\n          this.setState({ loading: true });\r\n          return;\r\n        }\r\n        if (info.file.response.code === 0) {\r\n          // Get this url from response in real world.\r\n          this.setState({\r\n            Audio:info.file.response.data,\r\n            loading: false,\r\n          })\r\n        }else{\r\n          message.error('上传失败!');\r\n        }\r\n      }\r\n      handleChangeimagestop1 = info => {\r\n        \r\n        console.log(info.file.response)\r\n        if (info.file.status === 'uploading') {\r\n          this.setState({ loading1: true });\r\n          return;\r\n        }\r\n        if (info.file.response.code === 0) {\r\n          // Get this url from response in real world.\r\n          this.setState({\r\n            topimageUrl1:info.file.response.data,\r\n            loading1: false,\r\n          })\r\n        }else{\r\n          message.error('上传失败!');\r\n        }\r\n      }; \r\n      handleChangeimagestop2 = info => {\r\n        \r\n        console.log(info.file.response)\r\n        if (info.file.status === 'uploading') {\r\n          this.setState({ loading1: true });\r\n          return;\r\n        }\r\n        if (info.file.response.code === 0) {\r\n          // Get this url from response in real world.\r\n          this.setState({\r\n            topimageUrl2:info.file.response.data,\r\n            loading1: false,\r\n          })\r\n        }else{\r\n          message.error('上传失败!');\r\n        }\r\n      };    \r\n      handleChangeimagestop3 = info => {\r\n        \r\n        console.log(info.file.response)\r\n        if (info.file.status === 'uploading') {\r\n          this.setState({ loading1: true });\r\n          return;\r\n        }\r\n        if (info.file.response.code === 0) {\r\n          // Get this url from response in real world.\r\n          this.setState({\r\n            topimageUrl3:info.file.response.data,\r\n            loading1: false,\r\n          })\r\n        }else{\r\n          message.error('上传失败!');\r\n        }\r\n      };    \r\n      handleChangevoide = info => {\r\n        \r\n        console.log(info.file.response)\r\n        if (info.file.status === 'uploading') {\r\n          this.setState({ loading1: true });\r\n          return;\r\n        }\r\n        if (info.file.response.code === 0) {\r\n          // Get this url from response in real world.\r\n          this.setState({\r\n            videoUrl:info.file.response.data,\r\n            loading2: false,\r\n          })\r\n        }else{\r\n          message.error('上传失败!');\r\n        }\r\n      };    \r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        var data={}\r\n        const { imageUrl,topimageUrl1,Audio,topimageUrl2,topimageUrl3,videoUrl,editorState1,editorState2} = this.state;\r\n        this.props.form.validateFields((err, values) => {\r\n            if (!err) {\r\n                \r\n               console.log(values)\r\n          \r\n                data={\"title\":values[\"title\"],\r\n                \"ratio\":values[\"ratio\"],\r\n              \"shaerdescribe\":values[\"shaerdescribe\"],\r\n               \"sharetitle\":values[\"sharetitle\"],\r\n              \"avstart\":values[\"range-time-activity\"][0].format('YYYY-MM-DD HH:mm:ss'),\r\n              \"avend\":values[\"range-time-activity\"][1].format('YYYY-MM-DD HH:mm:ss'),\r\n              \"votestart\":values[\"range-time-titck\"][0].format('YYYY-MM-DD HH:mm:ss'),\r\n              \"voteend\":values[\"range-time-titck\"][1].format('YYYY-MM-DD HH:mm:ss'),\r\n              \"moneystart\":values[\"range-time-money\"][0].format('YYYY-MM-DD HH:mm:ss'),\r\n              \"moneyend\":values[\"range-time-money\"][1].format('YYYY-MM-DD HH:mm:ss'),\r\n              \"click\":values[\"click\"],\r\n              \"video\":videoUrl,\r\n            \"topimage1\":topimageUrl1,\r\n            \"topimage2\":topimageUrl2,\r\n            \"topimage3\":topimageUrl3,\r\n            \"shaerimage\":imageUrl,\r\n            \"diamonds\":values[\"names\"].join(\",\"),\r\n            \"ruledescribe\":editorState1.toHTML(),\r\n            \"prizedescribe\":editorState2.toHTML(),\r\n            \"audio\":Audio,\r\n            \"roll\":values[\"roll\"],\r\n            \"baoming_cost\":values[\"baoming_cost\"],\r\n            \"interval\":values[\"interval\"],\r\n            \"baominginfo\":values[\"baominginfo\"]\r\n        }\r\n       if(this.state.action==\"add\"){\r\n       var url=\"/object/add\"\r\n          Axios.post(url,data).then((response)=>{\r\n\r\n           if(response.data.code==0){\r\n            this.props.history.push(\"/index\")\r\n            message.error(response.msg)\r\n           }\r\n          })\r\n            }\r\n        else{\r\n            var url=\"/object/update\"\r\n            data[\"id\"]=this.state.data.ID\r\n            Axios.post(url,data).then((response)=>{\r\n\r\n           if(response.data.code==0){\r\n            \r\n            this.props.history.push(\"/index\")\r\n           }else{\r\n             message.error(response.data.msg)\r\n           }\r\n        \r\n            })\r\n          \r\n          }\r\n        }\r\n        \r\n        });\r\n      \r\n        \r\n    };\r\n    forminit = data =>{\r\n      const { form } = this.props;\r\n \r\n      form.setFieldsValue({\"title\":data.Title})\r\n      form.setFieldsValue({\"ratio\":data.Ratio})\r\n      form.setFieldsValue({\"shaerdescribe\":data.Shaerdescribe})\r\n      form.setFieldsValue({\"sharetitle\":data.Sharetitle})\r\n      form.setFieldsValue({\"click\":data.Click})\r\n      form.setFieldsValue({\"baominginfo\":data.Baominginfo})\r\n     var avmoments=[\r\n        moment(data.Avstart),\r\n        moment(data.Avend)\r\n      ]\r\n     var  vomoments=[\r\n        moment(data.Votestart),\r\n        moment(data.Voteend)\r\n      ]\r\n      var moneymoments=[\r\n        moment(data.Moneystart),\r\n        moment(data.Moneyend)\r\n      ]\r\n\r\n      form.setFieldsValue({\"range-time-activity\":avmoments})\r\n      form.setFieldsValue({\"range-time-titck\":vomoments})\r\n      form.setFieldsValue({\"range-time-money\":moneymoments})\r\n      form.setFieldsValue({\"interval\":data.Interval})\r\n      form.setFieldsValue({\"baoming_cost\":data.BaomingCost})\r\n      form.setFieldsValue({\"roll\":data.Roll})\r\n      var diamonds=data.Diamonds.split(\",\")\r\n      console.log(data.Diamonds)\r\n      form.setFieldsValue({\"keys\": diamonds.map((k, index) =>{\r\n     \r\n        return parseInt(k)\r\n      })})\r\n    \r\n      \r\n      this.setState({\r\n        imageUrl:data.Shaerimage,\r\n        topimageUrl1:data.Topimage1,\r\n        topimageUrl2:data.Topimage2,\r\n        topimageUrl3:data.Topimage3,\r\n        Audio:data.Audio,\r\n        videoUrl:data.Video,\r\n        editorState1:BraftEditor.createEditorState(data.Ruledescribe),\r\n        editorState2:BraftEditor.createEditorState(data.Prizedescribe)\r\n      })\r\n     \r\n\r\n\r\n\r\n    }\r\n\r\n    normFile = e => {\r\n        console.log('Upload event:', e);\r\n        if (Array.isArray(e)) {\r\n            return e;\r\n        }\r\n        return e && e.fileList;\r\n    };\r\n    add = () => {\r\n        const { form } = this.props;\r\n        // can use data-binding to get\r\n        const keys = form.getFieldValue('keys');\r\n        const nextKeys = keys.concat(id++);\r\n        // can use data-binding to set\r\n        // important! notify form to detect changes\r\n        form.setFieldsValue({\r\n            keys: nextKeys,\r\n        });\r\n    };\r\n    remove = k => {\r\n      const { form } = this.props;\r\n      // can use data-binding to get\r\n      const keys = form.getFieldValue('keys');\r\n      // We need at least one passenger\r\n    //   if (keys.length === 1) {\r\n    //     return;\r\n    //   }\r\n\r\n      // can use data-binding to set\r\n      form.setFieldsValue({\r\n        keys: keys.filter(key => key !== k),\r\n      });\r\n    };\r\n    \r\n     handleEditorChange1 = (editorState1) => {\r\n      this.setState({ editorState1 })\r\n  }\r\n\r\n  handleEditorChange2 = (editorState2) => {\r\n    this.setState({ editorState2 })\r\n}\r\n  \r\n\r\n    render() {\r\n    \r\n     \r\n        const uploadButton = (\r\n            <div>\r\n              <Icon type={this.state.loading ? 'loading' : 'plus'} />\r\n              <div className=\"ant-upload-text\">Upload</div>\r\n            </div>\r\n          );\r\n          const uploadButton1 = (\r\n            <div>\r\n              <Icon type={this.state.loading1 ? 'loading' : 'plus'} />\r\n              <div className=\"ant-upload-text\">Upload</div>\r\n            </div>\r\n          );\r\n          const uploadButtontop1 = (\r\n            <div>\r\n              <Icon type={this.state.loadingtop1 ? 'loading' : 'plus'} />\r\n              <div className=\"ant-upload-text\">Upload</div>\r\n            </div>\r\n          );\r\n          const uploadButtontop2 = (\r\n            <div>\r\n              <Icon type={this.state.loadingtop2 ? 'loading' : 'plus'} />\r\n              <div className=\"ant-upload-text\">Upload</div>\r\n            </div>\r\n          );\r\n          const uploadButtontop3 = (\r\n            <div>\r\n              <Icon type={this.state.loadingtop3 ? 'loading' : 'plus'} />\r\n              <div className=\"ant-upload-text\">Upload</div>\r\n            </div>\r\n          );\r\n          const { videoUrl,imageUrl,topimageUrl1,topimageUrl2,topimageUrl3,editorState1,editorState2} = this.state;\r\n          \r\n        const rangeConfig = {\r\n            rules: [{ type: 'array', required: true, message: 'Please select time!' }],\r\n          };\r\n        const formItemLayout = {\r\n            labelCol: { span: 4 },\r\n            wrapperCol: { span: 18 },\r\n        };\r\n        const formItemLayoutWithOutLabel = {\r\n            wrapperCol: {\r\n              xs: { span: 24, offset: 0 },\r\n              sm: { span: 20, offset: 4 },\r\n            },\r\n          };\r\n        const { getFieldDecorator, getFieldValue } = this.props.form;\r\n      \r\n        getFieldDecorator('keys', { initialValue: [] });\r\n     \r\n        const keys = getFieldValue('keys');\r\n       \r\n        const formItems = keys.map((k, index) => (\r\n          <Form.Item\r\n            {... formItemLayout }\r\n            label='钻石数'\r\n            required={true}\r\n            key={k}\r\n          >\r\n            {getFieldDecorator(`names[${index}]`, {\r\n              initialValue:k,\r\n              validateTrigger: ['onChange', 'onBlur'],\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  \r\n                  message: \"不可为空.\",\r\n                },\r\n              ],\r\n            })(<InputNumber placeholder=\"输入钻石数量\" style={{ width: '60%', marginRight: 8 }} />)}\r\n            {keys.length > 0 ? (\r\n              <Icon\r\n                className=\"dynamic-delete-button\"\r\n                type=\"minus-circle-o\"\r\n                onClick={() => this.remove(k)}\r\n              />\r\n            ) : null}\r\n          </Form.Item>\r\n        ));\r\n       \r\n        return (\r\n          <Row>\r\n            <Temp/>\r\n            <Col style={{backgroundColor:\"#ffffff\"}} span={20}>\r\n            <div style={{ width: \"100%\" }}>\r\n\r\n                <Card style={{width:\"100%\"}}>\r\n                    <Form {...formItemLayout} onSubmit={this.handleSubmit}>\r\n\r\n                    <Tabs  type=\"card\">\r\n                    <TabPane tab=\"活动设置\" key=\"1\">\r\n                        <Form.Item label=\"活动标题\">\r\n                            {getFieldDecorator('title', {\r\n                                rules: [\r\n                                {\r\n                                \r\n                                  \r\n                                    message: 'The input is not valid E-mail!',\r\n                                },\r\n                                {\r\n                                  \r\n                                    required: true,\r\n                                    whitespace: true,\r\n                                    message: '请输入标题',\r\n                                },\r\n                                ],\r\n                            })(<Input />)}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"点击\">\r\n                            {getFieldDecorator('click', {\r\n                                rules: [\r\n                               \r\n                                {\r\n                                  \r\n                                    required: true,\r\n                                   \r\n                                    message: '请输入点击数',\r\n                                },\r\n                                ],\r\n                            })(<InputNumber />)}\r\n                        </Form.Item>\r\n\r\n                        <Form.Item label=\"报名费用\">\r\n                            {getFieldDecorator('baoming_cost', {\r\n                                rules: [\r\n                               \r\n                                {\r\n                                  \r\n                                    required: true,\r\n                                   \r\n                                    message: '请输入点击数',\r\n                                },\r\n                                ],\r\n                            })(<InputNumber />)}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"报名描述\">\r\n                            {getFieldDecorator('baominginfo', {\r\n                                rules: [\r\n                                {\r\n                                \r\n                                    message: 'The input is not valid E-mail!',\r\n                                },\r\n                                {\r\n                                    required: true,\r\n                                    message: '请输入描述',\r\n                                },  \r\n                                ],\r\n                            })(<TextArea style={{height:200 }}/>)}\r\n                        </Form.Item> \r\n                        <Form.Item label=\"投票间隔\">\r\n                            {getFieldDecorator('interval', {\r\n                                rules: [\r\n                               \r\n                                {\r\n                                  \r\n                                    required: true,\r\n                                   \r\n                                    message: '请输入点击数',\r\n                                },\r\n                                ],\r\n                            })(<InputNumber />)}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"头图\">\r\n                        <Row> \r\n                          <Col span={4}>\r\n                        <div>\r\n                        <Upload\r\n                            name=\"avatar\"\r\n                            listType=\"picture-card\"\r\n                            className=\"avatar-uploader\"\r\n                            showUploadList={false}\r\n                            action=\"/image/upload\"\r\n                            beforeUpload={beforeUpload}\r\n                            onChange={this.handleChangeimagestop1}\r\n                        >\r\n                            {topimageUrl1 ? <img src={topimageUrl1} alt=\"avatar\" style={{ width: '100%' }} /> : uploadButtontop1}\r\n                        </Upload>\r\n                        </div>\r\n                        </Col>\r\n                        <Col span={4} >\r\n                        <div>\r\n                        <Upload\r\n                            name=\"avatar\"\r\n                            listType=\"picture-card\"\r\n                            className=\"avatar-uploader\"\r\n                            showUploadList={false}\r\n                            action=\"/image/upload\"\r\n                            beforeUpload={beforeUpload}\r\n                            onChange={this.handleChangeimagestop2}\r\n                        >\r\n                            {topimageUrl2 ? <img src={topimageUrl2} alt=\"avatar\" style={{ width: '100%' }} /> : uploadButtontop2}\r\n                        </Upload>\r\n                        </div>\r\n                        </Col>\r\n                        <Col span={4}>\r\n                        <div>\r\n                        <Upload\r\n                            name=\"avatar\"\r\n                            listType=\"picture-card\"\r\n                            className=\"avatar-uploader\"\r\n                            showUploadList={false}\r\n                            action=\"/image/upload\"\r\n                            beforeUpload={beforeUpload}\r\n                            onChange={this.handleChangeimagestop3}\r\n                        >\r\n                            {topimageUrl3 ? <img src={topimageUrl3} alt=\"avatar\" style={{ width: '100%' }} /> : uploadButtontop3}\r\n                        </Upload>\r\n                        </div>\r\n                        </Col>\r\n                        </Row>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"活动时间\">\r\n                        {getFieldDecorator('range-time-activity', rangeConfig)(\r\n                          <RangePicker showTime format=\"YYYY-MM-DD HH:mm\" />,\r\n                           )}\r\n\r\n                        </Form.Item>\r\n                    \r\n                        <Form.Item label=\"投票时间\">\r\n                        {getFieldDecorator('range-time-titck', rangeConfig)(\r\n                          <RangePicker showTime format=\"YYYY-MM-DD HH:mm\" />,\r\n                           )}\r\n\r\n                        </Form.Item>\r\n                        \r\n                        <Form.Item label=\"充值时间\">\r\n                        {getFieldDecorator('range-time-money', rangeConfig)(\r\n                          <RangePicker showTime format=\"YYYY-MM-DD HH:mm\" />,\r\n                           )}\r\n\r\n                        </Form.Item>\r\n                        \r\n\r\n                        \r\n                       \r\n                    </TabPane >\r\n\r\n                    <TabPane tab=\"奖品内容设置\" key=\"2\">\r\n\r\n\r\n                    <Form.Item label=\"活动规则\">\r\n                        <div className=\"editor-wrapper\">\r\n                         <BraftEditor  contentStyle={{height:200}} value={editorState1} onChange={this.handleEditorChange1}/>\r\n                        </div>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"奖品\">\r\n                        <div className=\"editor-wrapper\">\r\n                            <BraftEditor contentStyle={{height:200}} value={editorState2} onChange={this.handleEditorChange2}/>\r\n                        </div>\r\n                        </Form.Item>\r\n\r\n                      </TabPane>\r\n                    <TabPane tab=\"钻石设置\" key=\"3\">\r\n                  \r\n                   \r\n                    <Form.Item label=\"比例\">\r\n                    {getFieldDecorator('ratio', {\r\n                               rules:[\r\n                                {\r\n                                    required: true,\r\n                                    message: '不可为空',\r\n                                }\r\n                               ]\r\n                            })(<InputNumber />)}\r\n                    </Form.Item>\r\n                    <Form.Item label=\"钻石\">\r\n                            <Button type=\"dashed\" onClick={this.add} style={{ width: '60%' }}>\r\n                                <Icon type=\"plus\" /> Add field\r\n                        </Button>\r\n                        </Form.Item>\r\n                     \r\n                        {formItems}\r\n                    </TabPane>\r\n\r\n                    <TabPane tab=\"分享设置\" key=\"4\">\r\n                    <Form.Item label=\"分享标题\">\r\n                            {getFieldDecorator('sharetitle', {\r\n                                rules: [\r\n                                {\r\n                                \r\n                                    message: 'The input is not valid E-mail!',\r\n                                },\r\n                                {\r\n                                    required: true,\r\n                                    message: '请输入标题',\r\n                                },  \r\n                                ],\r\n                            })(<Input />)}\r\n                        </Form.Item> \r\n                        <Form.Item label=\"分享内容\">\r\n                            {getFieldDecorator('shaerdescribe', {\r\n                                rules: [\r\n                                {\r\n                                \r\n                                    message: 'The input is not valid E-mail!',\r\n                                },\r\n                                {\r\n                                    required: true,\r\n                                    message: '请输入描述',\r\n                                },  \r\n                                ],\r\n                            })(<TextArea style={{height:200 }}/>)}\r\n                        </Form.Item> \r\n                        <Form.Item label=\"滚动文字\">\r\n                            {getFieldDecorator('roll', {\r\n                                rules: [\r\n                                {\r\n                                \r\n                                    message: 'The input is not valid E-mail!',\r\n                                },\r\n                                {\r\n                                    required: true,\r\n                                    message: '请输入描述',\r\n                                },  \r\n                                ],\r\n                            })(<TextArea style={{height:200 }}/>)}\r\n                        </Form.Item> \r\n                        <Form.Item label=\"视频\">\r\n                        <div>\r\n                        <Upload\r\n                            name=\"avatar\"\r\n                            listType=\"picture-card\"\r\n                            className=\"avatar-uploader\"\r\n                            showUploadList={false}\r\n                            action=\"/image/upload\"\r\n                            beforeUpload={beforeUploadvideo}\r\n                            onChange={this.handleChangevoide}\r\n                        >\r\n                            {videoUrl ? <img src={videoUrl} alt=\"avatar\" style={{ width: '100%' }} /> : uploadButton}\r\n                        </Upload>\r\n                        </div>\r\n                        </Form.Item > \r\n                       \r\n                        <Form.Item label=\"背景音乐\">\r\n                        <div>\r\n                        <Upload\r\n                            name=\"avatar\"\r\n                            listType=\"picture-card\"\r\n                            className=\"avatar-uploader\"\r\n                            showUploadList={false}\r\n                            action=\"/image/upload\"\r\n                            beforeUpload={beforeAudio}\r\n                            onChange={this.handleChangeAudio}\r\n                        >\r\n                            {Audio ? <img src={Audio} alt=\"avatar\" style={{ width: '100%' }} /> : uploadButton1}\r\n                        </Upload>\r\n                        </div>\r\n                        </Form.Item > \r\n                        <Form.Item label=\"分享图片\">\r\n                        <div>\r\n                        <Upload\r\n                            name=\"avatar\"\r\n                            listType=\"picture-card\"\r\n                            className=\"avatar-uploader\"\r\n                            showUploadList={false}\r\n                            action=\"/image/upload\"\r\n                            beforeUpload={beforeUpload}\r\n                            onChange={this.handleChangeimages}\r\n                        >\r\n                            {imageUrl ? <img src={imageUrl} alt=\"avatar\" style={{ width: '100%' }} /> : uploadButton1}\r\n                        </Upload>\r\n                        </div>\r\n                        </Form.Item > \r\n                        <Form.Item labelCol= {{ span:10 }} label=\" \" wrapperCol= {{ span: 12} }>\r\n                        <Button type=\"primary\" style={{width:100}} htmlType=\"submit\">提交 </Button>\r\n                        </Form.Item>\r\n                    </TabPane>\r\n                    \r\n                        </Tabs>\r\n                      \r\n                    </Form>\r\n                    \r\n                </Card>\r\n            </div>\r\n            </Col>\r\n            </Row>\r\n        )\r\n    }\r\n \r\n    \r\n    \r\n}\r\n\r\nconst createForm = Form.create;\r\n\r\nAddobject = createForm()(Addobject);\r\nexport default Addobject","import { Upload, Icon, message } from 'antd';\r\nimport React, { Fragment } from 'react'\r\nimport Axios from 'axios';\r\nfunction getBase64(img, callback) {\r\n  const reader = new FileReader();\r\n  reader.addEventListener('load', () => callback(reader.result));\r\n  reader.readAsDataURL(img);\r\n}\r\n\r\nfunction beforeUpload(file) {\r\n  const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\r\n  if (!isJpgOrPng) {\r\n    message.error('You can only upload JPG/PNG file!');\r\n  }\r\n  const isLt2M = file.size / 1024 / 1024 < 100;\r\n  if (!isLt2M) {\r\n    message.error('Image must smaller than 2MB!');\r\n  }\r\n  return isJpgOrPng && isLt2M;\r\n}\r\n\r\nclass Avatar extends React.Component {\r\n  state = {\r\n    loading: false,\r\n    action:\"add\",\r\n    id:0\r\n  };\r\n\r\n  handleChange = info => {\r\n    if (info.file.status === 'uploading') {\r\n      this.setState({ loading: true });\r\n      return;\r\n    }\r\n    if (info.file.status === 'done') {\r\n      // Get this url from response in real world.\r\n      getBase64(info.file.originFileObj, imageUrl =>\r\n        this.setState({\r\n          imageUrl,\r\n          loading: false,\r\n        }),\r\n      );\r\n    }\r\n  };\r\ncomponentDidMount(){\r\n  var data=this.props.location.state;\r\n    if(!data){\r\n      this.setState({\r\n        id:data.id,\r\n        action:\"up\"\r\n      })\r\n      \r\n    }\r\n}\r\nobjectinit(id){\r\n\r\n  var url=\r\n  Axios.post()\r\n}\r\n  render() {\r\n    const uploadButton = (\r\n      <div>\r\n        <Icon type={this.state.loading ? 'loading' : 'plus'} />\r\n        <div className=\"ant-upload-text\">Upload</div>\r\n      </div>\r\n    );\r\n    const { imageUrl } = this.state;\r\n    return (\r\n      <Upload\r\n        name=\"avatar\"\r\n        listType=\"picture-card\"\r\n        className=\"avatar-uploader\"\r\n        showUploadList={false}\r\n        action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\r\n        beforeUpload={beforeUpload}\r\n        onChange={this.handleChange}\r\n      >\r\n        {imageUrl ? <img src={imageUrl} alt=\"avatar\" style={{ width: '100%' }} /> : uploadButton}\r\n      </Upload>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Avatar","import React,{Fragment} from 'react'\r\nimport Temp from './temp'\r\nimport { Row,Breadcrumb,Table, Icon,Input,Col, Button,InputNumber,Tag} from 'antd';\r\nimport Axios from 'axios'\r\nimport moment from 'moment';\r\nclass GiftList extends React.Component{\r\n\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      data: [],\r\n    \r\n      pagination: {},\r\n      loading: false,\r\n    };\r\n\r\n  }\r\n  componentDidMount(){\r\n  \r\n    \r\n    this.getlist(1)\r\n}\r\ngetlist(page){\r\n  var url=\"/gift/list\"\r\n  var self=this\r\n  this.setState({ loading: true });\r\n  Axios.post(url,{\"page\":page}).then(\r\n    function(response){\r\n      if(response.data.code==0){\r\n        var pagination = { ...self.state.pagination };\r\n        pagination.total = response.data.data.Count;\r\n        self.setState({\r\n          loading: false,\r\n          data:response.data.data.List,\r\n          pagination:pagination\r\n        })\r\n      }\r\n}\r\n  )\r\n}\r\nhandleTableChange = (pagination, filters, sorter) => {\r\n  const pager = { ...this.state.pagination };\r\n  pager.current = pagination.current;\r\n  this.setState({\r\n    pagination: pager,\r\n  });\r\n  this.getlist( pager.current)\r\n}\r\n\r\n    render(){\r\n\r\n        return(\r\n          <Row>\r\n            <Temp/>\r\n            <Col style={{backgroundColor:\"#ffffff\"}} span={20}>\r\n                      \r\n                <div style={{width:\"100%\"}}>\r\n                <Row>  \r\n              <Breadcrumb>\r\n              <Breadcrumb.Item>首页</Breadcrumb.Item>\r\n              <Breadcrumb.Item>微活动</Breadcrumb.Item>\r\n              <Breadcrumb.Item>钻石投票</Breadcrumb.Item>\r\n              <Breadcrumb.Item>投票数据</Breadcrumb.Item>\r\n              </Breadcrumb>\r\n          </Row>\r\n          <Row style={{paddingTop:10}} >\r\n              <Col span=\"10\">\r\n                  <h1>\r\n                      投票数据\r\n                  </h1>\r\n                  </Col>\r\n              <Col span=\"10\"></Col>\r\n          </Row>\r\n        \r\n\r\n          <Row>\r\n          <Table columns={columns} \r\n            dataSource={this.state.data}\r\n            loading={this.state.loading}\r\n            pagination={this.state.pagination}\r\n            onChange={this.handleTableChange}\r\n          />\r\n          </Row>\r\n          </div>\r\n\r\n      </Col>\r\n      </Row>\r\n        )\r\n    }\r\n}\r\n\r\nconst columns = [{\r\n    title: '活动名称',\r\n    dataIndex: 'Title',\r\n    key: 'Title',\r\n    render(text) {\r\n      return <a href=\"#\">{text}</a>;\r\n    }\r\n  },\r\n  {\r\n    title: '选手名称',\r\n    dataIndex: 'Name',\r\n    key: 'Name',\r\n    render(text) {\r\n      return <a href=\"#\">{text}</a>;\r\n    }\r\n  },\r\n  {\r\n    title: '投票数',\r\n    dataIndex: 'Titcknum',\r\n    key: 'Titcknum',\r\n    render(text) {\r\n        return(\r\n        <div>\r\n       <Tag color=\"#f50\">{text}</Tag>\r\n        </div>\r\n        )\r\n   \r\n    }\r\n  }, {\r\n    title: '礼物数',\r\n    dataIndex: 'Giftnum',\r\n    key: 'Giftnum',\r\n    render(text) {\r\n        return(\r\n        <div>\r\n        <Tag color=\"#2db7f5\">{text}</Tag>\r\n        </div>\r\n        )\r\n   \r\n    }\r\n  }, {\r\n    title: 'ip',\r\n    dataIndex: 'Ip',\r\n    key: 'Ip',\r\n    render(text){\r\n        return(\r\n            <span>\r\n            {text}\r\n            </span>\r\n        )\r\n    }\r\n  }, \r\n  {\r\n      title: 'ip所在地',\r\n      dataIndex: 'Ipcity',\r\n      key: 'Ipcity',\r\n    }, \r\n    {\r\n      title: '是否付款',\r\n      dataIndex: 'Staus',\r\n      key: 'Staus',\r\n      render(text){\r\n       \r\n        if(text==\"yes\"){\r\n           return (<Tag color=\"#87d068\">已付款</Tag>)\r\n        }else{\r\n            return (<Tag >未付款</Tag>)\r\n        }\r\n        \r\n      }\r\n    }, \r\n    {\r\n      title: '投票时间',\r\n      dataIndex: 'UpdatedAt',\r\n      key: 'UpdatedAt',\r\n      render(text){\r\n        var newtext=  moment(text).format('YYYY-MM-DD HH:mm:ss')\r\n        return(newtext)\r\n        \r\n      }\r\n    }, \r\n    \r\n    {\r\n        title:\"类型\",\r\n        dataIndex:\"Gifttype\",\r\n        key:\"Gifttype\",\r\n        render(text){\r\n          return(text==\"vote\"?<Tag color=\"#87d068\">投票</Tag>:<Tag color=\"red\">充值</Tag>)\r\n        }\r\n    }\r\n   \r\n  \r\n  ];\r\n \r\n   \r\nexport default GiftList","import React,{Fragment} from 'react'\r\nimport { Row,Breadcrumb,Table, Icon,Input,Col, Card, Form,message, InputNumber ,Button, Modal} from 'antd';\r\nimport Axios from 'axios';\r\n\r\n\r\nclass AddAdmin extends React.Component{\r\n  \r\n  \r\n    handleSubmit = e => {\r\n        var data={}\r\n        e.preventDefault();\r\n        this.props.form.validateFields((err, values) => {\r\n         var username=values[\"username\"]\r\n         var pswd=values[\"pswd\"]\r\n      \r\n          data={\"username\":username,\"paswd\":pswd}\r\n        \r\n        });\r\n        var url=\"/admin/add\"\r\n        Axios.post(url,data).then(function(response){\r\n             \r\n            if(response.data.code==0){\r\n                message.success(\"添加成功\")\r\n            }\r\n          })\r\n      };\r\n    render(){\r\n\r\n        const formItemLayout = {\r\n            labelCol: { span: 6 },\r\n            wrapperCol: { span: 14 },\r\n          };\r\n        const { getFieldDecorator } = this.props.form;\r\n        return(\r\n               \r\n                        <Form {...formItemLayout} onSubmit={this.handleSubmit}>\r\n                        <Form.Item  label=\"用户名\">\r\n                            {getFieldDecorator('username', {\r\n                            rules: [\r\n                            {\r\n                             \r\n                                message: 'The input is not valid E-mail!',\r\n                            },\r\n                            {\r\n                                required: true,\r\n                                message: '请输入用户',\r\n                            },\r\n                            ],\r\n                        })(<Input />)}\r\n\r\n                        </Form.Item>\r\n                        <Form.Item label=\"密码\">\r\n                        {getFieldDecorator('pswd', {\r\n                            rules: [\r\n                            {\r\n                                \r\n                                message: '输入密码',\r\n                            },\r\n                            {\r\n                                required: true,\r\n                                message: 'Please input your phone'\r\n                            },\r\n                            ],\r\n                        })(<Input />)}\r\n                        </Form.Item>\r\n                    \r\n                      \r\n                        <Form.Item wrapperCol={{ span: 12, offset: 6 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">提交</Button>\r\n                        </Form.Item>\r\n                       \r\n                        </Form>\r\n           \r\n\r\n\r\n           \r\n        )\r\n    }\r\n}\r\nconst createForm = Form.create;\r\n\r\nAddAdmin = createForm()(AddAdmin);\r\nexport default AddAdmin","import React,{Fragment} from 'react'\r\nimport { Row,Breadcrumb,Table, Icon,Input,Col, Button,InputNumber,Modal,Popconfirm,message} from 'antd';\r\nimport AddAdmin from './addAdmin'\r\nimport Axios from 'axios'\r\nimport Temp from './temp'\r\nclass Admin extends React.Component{\r\n\r\n  constructor(props){\r\n    super(props)\r\n    this.getlist=this.getlist.bind(this)\r\n    this.deleteadmin=this.deleteadmin.bind(this)\r\n    this.state = {\r\n      data: [],\r\n      pagination: {},\r\n      loading: false,\r\n    };\r\n    \r\n    this.columns=[\r\n      {\r\n        title: '用户名',\r\n        dataIndex: 'Username',\r\n        key: 'Username',\r\n        render(text) {\r\n          return <a href=\"#\">{text}</a>;\r\n        }\r\n      },\r\n      {\r\n        title: '密码',\r\n        dataIndex: 'Paswd',\r\n        key: 'Paswd',\r\n        render(text) {\r\n          return <a href=\"#\">{text}</a>;\r\n        }\r\n      },\r\n      {\r\n        title: '金额',\r\n        dataIndex: 'Money',\r\n        key: 'Money',\r\n        render(text) {\r\n          return <a href=\"#\">{text}</a>;\r\n        }\r\n      },\r\n      {\r\n        title: '操作',\r\n        dataIndex: 'opertor',\r\n        key: 'opertor',\r\n        render:(text,red)=> {\r\n          return  <Popconfirm title=\"确定要删除吗?\" onConfirm={() =>this.deleteadmin(red.ID)}>\r\n          <a href=\"javascript:;\">删除</a>\r\n          </Popconfirm>;\r\n        }\r\n      },\r\n    ]\r\n\r\n  }\r\n  deleteadmin= id =>{\r\n    var url=\"/admin/delete\"\r\n    var self=this\r\n    Axios.post(url,{\"id\":id}).then((res)=>{\r\n  \r\n      if(res.data.code==0){\r\n        const data = [...self.state.data];\r\n        this.setState({ data: data.filter(item => item.ID !== id) });\r\n        message.success('删除成功');\r\n\r\n      }else{\r\n        message.error('删除失败');\r\n\r\n      }\r\n  \r\n    }\r\n    )\r\n  \r\n  };\r\n  componentDidMount(props){\r\n    \r\n    this.getlist(1)\r\n  }\r\n  getlist(page){\r\n    var url=\"/admin/list\"\r\n    var self=this\r\n    this.setState({ loading: true });\r\n    Axios.post(url,{\"page\":page}).then(\r\n      function(response){\r\n\r\n        if(response.data.code==0){\r\n          var pagination = { ...self.state.pagination };\r\n          pagination.total = response.data.data.Count;\r\n          self.setState({\r\n            loading: false,\r\n            data:response.data.data.List,\r\n            pagination:pagination\r\n          })\r\n        }\r\n      })\r\n\r\n    \r\n  }\r\n   \r\n    showModal = () => {\r\n        this.setState({\r\n          visible: true,\r\n        });\r\n      };\r\n    \r\n      handleOk = e => {\r\n        console.log(e);\r\n        this.setState({\r\n          visible: false,\r\n        });\r\n      };\r\n    \r\n      handleCancel = e => {\r\n        console.log(e);\r\n        this.setState({\r\n          visible: false,\r\n        });\r\n      };\r\n      \r\n    render(){\r\n        return(\r\n          <Row>\r\n          <Temp/>\r\n          <Col style={{backgroundColor:\"#ffffff\"}} span={20}>\r\n            <div style={{width:\"100%\"}}>\r\n                  <Row>  \r\n                <Breadcrumb>\r\n                <Breadcrumb.Item>首页</Breadcrumb.Item>\r\n                <Breadcrumb.Item>系统</Breadcrumb.Item>\r\n                <Breadcrumb.Item>用户管理</Breadcrumb.Item>\r\n                 </Breadcrumb>\r\n             </Row>\r\n             <Row style={{paddingTop:10}} >\r\n                 <Col span=\"10\">\r\n                     <h1>\r\n                         用户管理\r\n                     </h1>\r\n                     </Col>\r\n                 <Col span=\"10\"></Col>\r\n             </Row>\r\n             <Row>\r\n             <Col span=\"10\"><h3></h3></Col>\r\n             <Col span=\"13\" style={{textAlign:\"right\"}}>\r\n\r\n             <Button type=\"primary\" onClick={this.showModal}>添加用户+</Button>\r\n             </Col>\r\n             </Row>\r\n             <Row>\r\n             <Table columns={this.columns} dataSource={this.state.data}/>\r\n             </Row>\r\n             <Modal  title=\"添加账号\"\r\n                visible={this.state.visible}\r\n                onOk={this.handleOk}\r\n                onCancel={this.handleCancel}\r\n               >\r\n                    <AddAdmin />\r\n               </Modal>\r\n            </div>\r\n            </Col>\r\n            </Row>\r\n        )\r\n    }\r\n}\r\n\r\n    \r\n  \r\n   \r\n    \r\nexport default Admin","import React,{Fragment} from 'react'\r\nimport ObjiectList from './objectlist'\r\nimport CustomerList from './Customerlist'\r\nimport Addcustomer from './addcustomer'\r\nimport Addobject from './bojectadd'\r\nimport Avatar from './addboject'\r\nimport GiftList from './giftlist'\r\nimport AddAdmin from './addAdmin'\r\nimport Admin from './admin'\r\nimport { Menu, Icon, Switch,Row, Col  } from 'antd';\r\nconst SubMenu = Menu.SubMenu;\r\n\r\nvar pagemap={\r\n    \"objlist\":ObjiectList,\r\n    \"giftlist\":GiftList,\r\n    'customerList':CustomerList,\r\n}\r\nclass Index extends React.Component{\r\n\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            index:ObjiectList\r\n        }\r\n    this.menuclick=this.menuclick.bind(this)\r\n    }\r\n    \r\n    menuclick(key){\r\n\r\n        console.log(key)\r\n        this.setState({\r\n            index:pagemap[key]\r\n        })\r\n    }\r\n    render(){\r\n\r\n        return(\r\n            <Row >\r\n        <Col span={4}>\r\n                        <div>\r\n                      \r\n                        <Menu theme=\"dark\"\r\n                        onClick={this.handleClick}\r\n                        style={{ width: \"100%\" ,height:\"100%\"}}\r\n                        defaultOpenKeys={['sub1']}\r\n                      \r\n                        mode=\"inline\">\r\n                       \r\n                        <SubMenu key=\"sub2\" title={<span><Icon type=\"appstore\" /><span>基础设置</span></span>}>\r\n                        <Menu.Item key=\"6\" onClick={()=>this.menuclick(\"customerList\") }>账号管理</Menu.Item>\r\n\r\n                       \r\n                            </SubMenu>\r\n                      \r\n                        <SubMenu key=\"sub4\" title={<span><Icon type=\"setting\" /><span>微活动</span></span>}>\r\n                        <Menu.Item key=\"8\" onClick={()=>this.menuclick(\"objlist\")} >\r\n                        钻石投票</Menu.Item>\r\n                        <Menu.Item key=\"7\"  onClick={()=>this.menuclick(\"giftlist\") }>礼物列表</Menu.Item>\r\n                        </SubMenu>\r\n                        </Menu>\r\n                    </div>\r\n                </Col>\r\n                <Col style={{backgroundColor:\"#ffffff\"}} span={20}>\r\n                    {<this.state.index />}\r\n                   \r\n                    </Col>\r\n            </Row>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default Index","import React,{Fragment} from 'react'\r\nimport { Row,Breadcrumb,Table, Icon,Input,Col, Card, Form,Upload, InputNumber ,Button,message,Switch, Spin} from 'antd';\r\nimport TextArea from 'antd/lib/input/TextArea';\r\nimport Axios from 'axios'\r\nimport Temp from './temp'\r\nconst createForm = Form.create;\r\nfunction sleep(ms) {\r\n  return new Promise(resolve => setTimeout(resolve, ms));\r\n  } \r\nfunction beforeUpload(file) {\r\n    const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\r\n    if (!isJpgOrPng) {\r\n      message.error('You can only upload JPG/PNG file!');\r\n    }\r\n    const isLt2M = file.size / 1024 / 1024 < 1000;\r\n    if (!isLt2M) {\r\n      message.error('图片大小不能大于2M!');\r\n    }\r\n    return isJpgOrPng && isLt2M;\r\n  }\r\nclass AddcustomerList extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n       this.addcustome=this.addcustome.bind(this)\r\n       this.addcustomelist=this.addcustomelist.bind(this)\r\n     \r\n      this.state={\r\n        fileList:[],\r\n        objid:parseInt(this.props.match.params.objid),\r\n        loading: false, \r\n       \r\n      }\r\n      \r\n      \r\n     \r\n        \r\n    }\r\n   \r\n    handleChange = info => {\r\n        let fileList = [...info.fileList];\r\n    \r\n        // 1. Limit the number of uploaded files\r\n        // Only to show two recent uploaded files, and old ones will be replaced by the new\r\n    \r\n        // 2. Read from response and show file link\r\n        fileList = fileList.map(file => {\r\n            console.log(file)\r\n          if (file.response) {\r\n            // Component will show file.url as link\r\n            file.url = file.response.data;\r\n         \r\n          }\r\n\r\n          return file;\r\n        });\r\n      \r\n        this.setState({ fileList });\r\n   \r\n    }\r\n\r\n    addcustome(objid,name,image){\r\n        var data={\r\n            \"name\":name,\r\n            \"phone\":\" \",\r\n            \"objid\":objid,\r\n            \"describe\":\"\",\r\n            \"image1\":image,\r\n            \"image2\":\"\",\r\n            \"image3\":\"\",\r\n            \"image4\":\"\",\r\n            \"image5\":\"\",\r\n            \"staus\":\"yes\",\r\n            \r\n        }\r\n        \r\n        var url=\"/user/add\"\r\n        Axios.post(url,data).then((res)=>{\r\n        if(res.data.code==0){\r\n            message.success(\"添加成功\")\r\n        }})\r\n    }\r\n    \r\n    \r\n    async addcustomelist(){\r\n        var {fileList}=this.state\r\n        this.setState({\r\n          loading:true\r\n        })\r\n        for(var i=0;i<fileList.length;i++){\r\n         \r\n          var file=fileList[i]\r\n          if (file.response) {\r\n              if(file.response.code==0){\r\n                await sleep(80)\r\n            // Component will show file.url as link\r\n             this.addcustome(this.state.objid,file.name.split(\".\")[0] ,file.url)\r\n              }\r\n          }\r\n\r\n          \r\n        }\r\n        this.setState({\r\n          loading:false\r\n        })\r\n        this.props.history.push(\"/customerlist/\"+this.state.objid+\"/\"+1)\r\n\r\n    }\r\n    \r\n    \r\n    render()\r\n    {\r\n\r\n        const props = {\r\n            action: '/image/upload',\r\n            onChange: this.handleChange,\r\n            multiple: true,\r\n            name:\"avatar\"\r\n          };\r\n  \r\n        return(\r\n           <Spin tip=\"提交中...\" spinning={this.state.loading} delay={100}>\r\n          <Row>\r\n          <Temp/>\r\n          <Col style={{backgroundColor:\"#ffffff\"}} span={20}>\r\n            <div style={{width:\"100%\"}}>\r\n             \r\n                <Row>\r\n                <Row>  \r\n            <Breadcrumb>\r\n            <Breadcrumb.Item>首页</Breadcrumb.Item>\r\n            <Breadcrumb.Item>微活动</Breadcrumb.Item>\r\n            <Breadcrumb.Item>批量上传</Breadcrumb.Item>\r\n             </Breadcrumb>\r\n         </Row>\r\n                    <Card>\r\n                     \r\n                <Upload {...props} fileList={this.state.fileList}>\r\n                        <Button>\r\n                            <Icon type=\"upload\" /> 点击上传\r\n                        </Button>\r\n                </Upload>\r\n                    </Card>\r\n                    \r\n                </Row>\r\n            <Row style={{ paddingLeft:\"40%\"}}><Button onClick={()=>this.addcustomelist()}>提交</Button></Row>\r\n            </div>\r\n            </Col>\r\n            </Row>\r\n            </Spin>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default AddcustomerList","import React,{Fragment} from 'react'\r\nimport { Row,Breadcrumb,Table, Icon,List,Col, Button,InputNumber, message,Popconfirm,Tag} from 'antd';\r\nimport Axios from 'axios'\r\nimport {Link} from 'react-router-dom'\r\nimport Temp from './temp'\r\n\r\nclass BlaskList extends React.Component{\r\n\r\n\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.getiplist=this.getiplist.bind(this)\r\n        this.deleteip=this.deleteip.bind(this)\r\n        this.state={\r\n            data:[]\r\n        }\r\n        this.getiplist()\r\n    }\r\n\r\n    getiplist(){\r\n\r\n        \r\n        Axios.post(\"/black/list\").then((res)=>{\r\n            if(res.data.code==0){\r\n                this.setState({\r\n                    data:res.data.data\r\n                })\r\n            }\r\n        })\r\n    }\r\n    deleteip(ip){\r\n    Axios.post(\"/black/delete\",{\"ip\":ip}).then((res)=>{\r\n\r\n        if(res.data.code==0){\r\n            this.getiplist()\r\n        }\r\n    })\r\n    }\r\n    render(){\r\n      \r\n        var data=this.state.data\r\n        if(!data){\r\n            data=[]\r\n        }\r\n        return(\r\n            <Row>\r\n            <Temp/>\r\n            <Col style={{backgroundColor:\"#ffffff\"}} span={20}>\r\n            <h3 style={{ margin: '16px 0' }}>拦截名单</h3>\r\n            <List\r\n              size=\"small\"\r\n            \r\n           \r\n              bordered\r\n              dataSource={data}\r\n              renderItem={item => <List.Item><div>{item}</div><Icon onClick={()=>this.deleteip(item)} type=\"close-circle\" /></List.Item>}\r\n            /> \r\n            </Col>\r\n            </Row>\r\n        )\r\n    }\r\n}\r\nexport default BlaskList","import React,{Fragment} from 'react'\r\nimport { Row,Breadcrumb,Table, Icon,Input,Col, Card, Form,message, InputNumber ,Button, Modal} from 'antd';\r\nimport Axios from 'axios';\r\n\r\n\r\nclass Addauto extends React.Component{\r\n  \r\n  \r\n    handleSubmit = e => {\r\n        var data={}\r\n        e.preventDefault();\r\n        this.props.form.validateFields((err, values) => {\r\n         var objid=parseInt(values[\"objid\"])\r\n         var interval=values[\"interval\"]\r\n         var click=values[\"click\"]\r\n      \r\n          data={\"objid\":objid,\"interval\":interval,\"click\":click}\r\n        \r\n        });\r\n        var url=\"/auto/add\"\r\n        Axios.post(url,data).then((response)=>{\r\n             \r\n            if(response.data.code==0){\r\n                message.success(\"添加成功\")\r\n            }\r\n          })\r\n      };\r\n    render(){\r\n\r\n        const formItemLayout = {\r\n            labelCol: { span: 6 },\r\n            wrapperCol: { span: 14 },\r\n          };\r\n        const { getFieldDecorator } = this.props.form;\r\n        return(\r\n               \r\n                        <Form {...formItemLayout} onSubmit={this.handleSubmit}>\r\n                        <Form.Item  label=\"活动id\">\r\n                            {getFieldDecorator('objid', {\r\n                            rules: [\r\n                            {\r\n                             \r\n                                message: 'The input is not valid E-mail!',\r\n                            },\r\n                            {\r\n                                required: true,\r\n                                message: '请输入活动ID',\r\n                            },\r\n                            ],\r\n                        })(<Input />)}\r\n\r\n                        </Form.Item>\r\n                        <Form.Item label=\"间隔\">\r\n                        {getFieldDecorator('interval', {\r\n                            rules: [\r\n                            {\r\n                                required: true,\r\n                                message: '不可为空',\r\n                              \r\n                            },\r\n                            \r\n                            ],\r\n                        })(<InputNumber />)}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"点击数\">\r\n                        {getFieldDecorator('click', {\r\n                            rules: [\r\n                            {\r\n                                \r\n                                required: true,\r\n                                message: '不可为空',\r\n                            },\r\n                           \r\n                            ],\r\n                        })(<InputNumber />)}\r\n                        </Form.Item>\r\n                    \r\n                      \r\n                        <Form.Item wrapperCol={{ span: 12, offset: 6 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">提交</Button>\r\n                        </Form.Item>\r\n                       \r\n                        </Form>\r\n           \r\n\r\n\r\n           \r\n        )\r\n    }\r\n}\r\nconst createForm = Form.create;\r\n\r\nAddauto = createForm()(Addauto);\r\nexport default Addauto","import React,{Fragment} from 'react'\r\nimport { Row,Breadcrumb,Table, Icon,Input,Col, Button,InputNumber,Modal,Popconfirm,message} from 'antd';\r\nimport Addauto from './addauto'\r\nimport Axios from 'axios'\r\nimport Temp from './temp'\r\nclass Auto extends React.Component{\r\n\r\n  constructor(props){\r\n    super(props)\r\n    this.getlist=this.getlist.bind(this)\r\n    this.state = {\r\n      data: [],\r\n      pagination: {},\r\n      loading: false,\r\n    };\r\n    \r\n    this.columns=[\r\n      {\r\n        title: '活动名称',\r\n        dataIndex: 'Title',\r\n        key: 'Title',\r\n        render(text) {\r\n          return <a href=\"\">{text}</a>;\r\n        }\r\n      },\r\n      {\r\n        title: '间隔',\r\n        dataIndex: 'Interval',\r\n        key: 'Interval',\r\n        render(text) {\r\n          return <a href=\"#\">{text}</a>;\r\n        }\r\n      },\r\n      {\r\n        title: '增加点击数',\r\n        dataIndex: 'Click',\r\n        key: 'Click',\r\n        render(text) {\r\n          return <a href=\"#\">{text}</a>;\r\n        }\r\n      },\r\n      {\r\n        title: '操作',\r\n        dataIndex: 'opertor',\r\n        key: 'opertor',\r\n        render:(text,red)=> {\r\n          return  <Popconfirm title=\"确定要删除吗?\" onConfirm={() =>this.deleteauto(red.Objid)}>\r\n          <a href=\"javascript:;\">删除</a>\r\n          </Popconfirm>;\r\n        }\r\n      },\r\n    ]\r\n\r\n  }\r\n  deleteauto= id =>{\r\n    var url=\"/auto/delete\"\r\n    var self=this\r\n    Axios.post(url,{\"id\":id}).then((res)=>{\r\n  \r\n      if(res.data.code==0){\r\n        const data = [...self.state.data];\r\n        this.setState({ data: data.filter(item => item.Objid !== id) });\r\n        message.success('删除成功');\r\n\r\n      }else{\r\n        message.error('删除失败');\r\n\r\n      }\r\n  \r\n    }\r\n    )\r\n  \r\n  };\r\n  componentDidMount(props){\r\n    \r\n    this.getlist(1)\r\n  }\r\n  getlist(page){\r\n    var url=\"/auto/list\"\r\n    var self=this\r\n    this.setState({ loading: true });\r\n    Axios.post(url,{\"page\":page}).then(\r\n      function(response){\r\n\r\n        if(response.data.code==0&response.data.data!=null){\r\n          var pagination = { ...self.state.pagination };\r\n          pagination.total = response.data.data.length;\r\n          self.setState({\r\n            loading: false,\r\n            data:response.data.data,\r\n            pagination:pagination\r\n          })\r\n        }\r\n      })\r\n\r\n    \r\n  }\r\n   \r\n    showModal = () => {\r\n        this.setState({\r\n          visible: true,\r\n        });\r\n      };\r\n    \r\n      handleOk = e => {\r\n        console.log(e);\r\n        this.setState({\r\n          visible: false,\r\n        });\r\n      };\r\n    \r\n      handleCancel = e => {\r\n        console.log(e);\r\n        this.setState({\r\n          visible: false,\r\n        });\r\n      };\r\n      \r\n    render(){\r\n        return(\r\n          <Row>\r\n          <Temp/>\r\n          <Col style={{backgroundColor:\"#ffffff\"}} span={20}>\r\n            <div style={{width:\"100%\"}}>\r\n                  <Row>  \r\n                <Breadcrumb>\r\n                <Breadcrumb.Item>首页</Breadcrumb.Item>\r\n                <Breadcrumb.Item>微活动</Breadcrumb.Item>\r\n                <Breadcrumb.Item>自动任务</Breadcrumb.Item>\r\n                 </Breadcrumb>\r\n             </Row>\r\n             <Row style={{paddingTop:10}} >\r\n                 <Col span=\"10\">\r\n                     <h1>\r\n                     自动任务\r\n                     </h1>\r\n                     </Col>\r\n                 <Col span=\"10\"></Col>\r\n             </Row>\r\n             <Row>\r\n             <Col span=\"10\"><h3></h3></Col>\r\n             <Col span=\"13\" style={{textAlign:\"right\"}}>\r\n\r\n             <Button type=\"primary\" onClick={this.showModal}>添加任务+</Button>\r\n             </Col>\r\n             </Row>\r\n             <Row>\r\n             <Table columns={this.columns} dataSource={this.state.data}/>\r\n             </Row>\r\n             <Modal  title=\"添加任务\"\r\n                visible={this.state.visible}\r\n                onOk={this.handleOk}\r\n                onCancel={this.handleCancel}\r\n               >\r\n                    <Addauto />\r\n               </Modal>\r\n            </div>\r\n            </Col>\r\n            </Row>\r\n        )\r\n    }\r\n}\r\n\r\n    \r\n  \r\n   \r\n    \r\nexport default Auto","import React,{Fragment} from 'react'\r\nimport Temp from './temp';\r\nimport { Col, Card,Row,Icon, Button,Modal,message,Form ,Input} from 'antd';\r\nimport Axios from \"axios\"\r\nclass Myadmin extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.adminit=this.adminit.bind(this)\r\n        this.state={\r\n            usernam:\"\",\r\n            paswd:\"\",\r\n            money:0,\r\n            ispswd:false,\r\n            visible:false,\r\n        }\r\n        this.adminit()\r\n    }\r\n    adminit(){\r\n        Axios.post(\"/admin/get\").then((res)=>{\r\n\r\n            this.setState({\r\n                usernam:res.data.data.Username,\r\n                paswd:res.data.data.Paswd,\r\n                money:res.data.data.Money\r\n\r\n            })\r\n        })\r\n    }\r\n    handleSubmit = e => {\r\n        var data={}\r\n        e.preventDefault();\r\n        this.props.form.validateFields((err, values) => {\r\n         var pswd=values[\"pswd\"]\r\n          data={\"pawsd\":pswd}\r\n        });\r\n        var url=\"/admin/updatepaswd\"\r\n        Axios.post(url,data).then(function(response){\r\n             \r\n            if(response.data.code==0){\r\n                message.success(\"修改成功\")\r\n            }\r\n          })\r\n      };\r\n         \r\n    showModal = () => {\r\n        this.setState({\r\n          visible: true,\r\n        });\r\n      };\r\n    \r\n      handleOk = e => {\r\n        console.log(e);\r\n        this.setState({\r\n          visible: false,\r\n        });\r\n      };\r\n    \r\n      handleCancel = e => {\r\n        console.log(e);\r\n        this.setState({\r\n          visible: false,\r\n        });\r\n      };\r\n    render(){\r\n        const { getFieldDecorator } = this.props.form;\r\n        const formItemLayout = {\r\n            labelCol: { span: 6 },\r\n            wrapperCol: { span: 14 },\r\n          };\r\n        return(\r\n            <Row>\r\n                <Temp/>\r\n                <Col style={{backgroundColor:\"#ffffff\"}} span={20}>\r\n                    <Card style={{paddingTop:50,paddingLeft:100}}>\r\n                        <Row style={{paddingTop:5,fontSize:25}}><Icon type=\"user\" /><label>账号:{this.state.usernam}</label></Row>\r\n                        <Row style={{paddingTop:20,fontSize:25}}><Icon type=\"pause-circle\" /><label>密码:{this.state.ispswd==true?this.state.paswd:\"**********\"}</label><Icon onClick={()=>{\r\n                            this.setState({\r\n                                ispswd:!this.state.ispswd\r\n                            })\r\n                        }} type=\"eye\" /></Row>\r\n                        <Row><Button onClick={()=>this.showModal()}>修改密码</Button></Row>\r\n                        <Row style={{paddingTop:20,fontSize:25}}><Icon type=\"transaction\" /><label>金额:{this.state.money}</label></Row>\r\n                     \r\n                    </Card>\r\n                </Col>\r\n                <Modal\r\n                    title=\"修改密码\"\r\n                    visible={this.state.visible}\r\n                    onOk={this.handleOk}\r\n                    onCancel={this.handleCancel}\r\n                >\r\n                <Form {...formItemLayout} onSubmit={this.handleSubmit}>\r\n                        <Form.Item label=\"密码\">\r\n                        {getFieldDecorator('pswd', {\r\n                            rules: [\r\n                            {\r\n                                \r\n                                message: '输入密码',\r\n                            },\r\n                            {\r\n                                required: true,\r\n                                message: 'Please input your phone'\r\n                            },\r\n                            ],\r\n                        })(<Input />)}\r\n                        </Form.Item>\r\n                    \r\n                      \r\n                        <Form.Item wrapperCol={{ span: 12, offset: 6 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">提交</Button>\r\n                        </Form.Item>\r\n                       \r\n                        </Form>\r\n        </Modal>\r\n                </Row>\r\n        )\r\n    }\r\n}\r\nconst createForm = Form.create;\r\n\r\nMyadmin = createForm()(Myadmin);\r\nexport default Myadmin","import React,{Fragment} from 'react'\r\nimport { Row,Breadcrumb,Table, Icon,Input,Col,Button,Popconfirm ,message,Tag } from 'antd';\r\nimport {Link} from 'react-router-dom'\r\nimport Axios from 'axios';\r\nimport Temp from './temp'\r\nimport copy from 'copy-to-clipboard';\r\nimport moment from 'moment';\r\nimport GiftList from './giftlist';\r\nclass UserGifts extends React.Component{\r\n\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            name:this.props.match.params.name,\r\n            data:[],\r\n            pagination: {},\r\n            loading: false,\r\n            userid:parseInt(this.props.match.params.userid)\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount(){\r\n  \r\n    \r\n        this.getlist(1)\r\n    }\r\n    \r\n    getlist(page){\r\n      var url=\"/gift/usergift\"\r\n      var self=this\r\n      this.setState({ loading: true });\r\n      Axios.post(url,{\"page\":page,\"userid\":this.state.userid}).then(\r\n        function(response){\r\n          if(response.data.code==0){\r\n            var pagination = { ...self.state.pagination };\r\n            pagination.total = response.data.data.Count;\r\n            self.setState({\r\n              loading: false,\r\n              data:response.data.data.List,\r\n              pagination:pagination\r\n            })\r\n          }\r\n    }\r\n      )\r\n    }\r\n    handleTableChange = (pagination, filters, sorter) => {\r\n      const pager = { ...this.state.pagination };\r\n      pager.current = pagination.current;\r\n      this.setState({\r\n        pagination: pager,\r\n      });\r\n      this.getlist( pager.current)\r\n    }\r\n\r\n    render(){\r\n\r\n        return(\r\n    \r\n\r\n            <Row>\r\n            <Temp/>\r\n            <Col style={{backgroundColor:\"#ffffff\"}} span={20}>\r\n            <div style={{width:\"100%\"}}>\r\n                  <Row>  \r\n                <Breadcrumb>\r\n                <Breadcrumb.Item>首页</Breadcrumb.Item>\r\n                <Breadcrumb.Item>微活动</Breadcrumb.Item>\r\n                <Breadcrumb.Item>钻石投票</Breadcrumb.Item>\r\n                <Breadcrumb.Item>用户投票数据</Breadcrumb.Item>\r\n                 </Breadcrumb>\r\n             </Row>\r\n             <Row style={{paddingTop:10}} >\r\n                 <Col span=\"10\">\r\n                     <h1>\r\n                         [{this.state.name}]投票数据\r\n                     </h1>\r\n                     </Col>\r\n                 <Col span=\"10\"></Col>\r\n             </Row>\r\n           \r\n             <Row>\r\n          \r\n             </Row>\r\n             <Row>\r\n             <Table columns={columns} \r\n             dataSource={this.state.data}\r\n             loading={this.state.loading}\r\n             pagination={this.state.pagination}\r\n             onChange={this.handleTableChange}\r\n             />\r\n             </Row>\r\n            </div>\r\n            </Col>\r\n            </Row>\r\n            )\r\n    }\r\n    \r\n}\r\n\r\nconst columns = [{\r\n    title: '活动名称',\r\n    dataIndex: 'Title',\r\n    key: 'Title',\r\n    render(text) {\r\n      return <a href=\"#\">{text}</a>;\r\n    }\r\n  },\r\n  {\r\n    title: '选手名称',\r\n    dataIndex: 'Name',\r\n    key: 'Name',\r\n    render(text) {\r\n      return <a href=\"#\">{text}</a>;\r\n    }\r\n  },\r\n  {\r\n    title: '投票数',\r\n    dataIndex: 'Titcknum',\r\n    key: 'Titcknum',\r\n    render(text) {\r\n        return(\r\n        <div>\r\n       <Tag color=\"#f50\">{text}</Tag>\r\n        </div>\r\n        )\r\n   \r\n    }\r\n  }, {\r\n    title: '礼物数',\r\n    dataIndex: 'Giftnum',\r\n    key: 'Giftnum',\r\n    render(text) {\r\n        return(\r\n        <div>\r\n        <Tag color=\"#2db7f5\">{text}</Tag>\r\n        </div>\r\n        )\r\n   \r\n    }\r\n  }, {\r\n    title: 'ip',\r\n    dataIndex: 'Ip',\r\n    key: 'Ip',\r\n    render(text){\r\n        return(\r\n            <span>\r\n            {text}\r\n            </span>\r\n        )\r\n    }\r\n  }, \r\n  {\r\n      title: 'ip所在地',\r\n      dataIndex: 'Ipcity',\r\n      key: 'Ipcity',\r\n    }, \r\n    {\r\n      title: '是否付款',\r\n      dataIndex: 'Staus',\r\n      key: 'Staus',\r\n      render(text){\r\n       \r\n        if(text==\"yes\"){\r\n           return (<Tag color=\"#87d068\">已付款</Tag>)\r\n        }else{\r\n            return (<Tag color=\"gery\">未付款</Tag>)\r\n        }\r\n        \r\n      }\r\n    }, \r\n    {\r\n      title: '投票时间',\r\n      dataIndex: 'UpdatedAt',\r\n      key: 'UpdatedAt',\r\n      render(text){\r\n        var newtext=  moment(text).format('YYYY-MM-DD HH:mm:ss')\r\n        return(newtext)\r\n        \r\n      }\r\n    }, \r\n    \r\n    {\r\n        title:\"类型\",\r\n        dataIndex:\"Gifttype\",\r\n        key:\"Gifttype\",\r\n        render(text){\r\n          return(text==\"vote\"?<Tag color=\"#87d068\">投票</Tag>:<Tag color=\"red\">充值</Tag>)\r\n        }\r\n    }\r\n   \r\n  \r\n  ];\r\n export default UserGifts\r\n","import React from 'react'\r\nimport {HashRouter,Route,Switch} from 'react-router-dom'\r\nimport ObjiectList from '../pages/objectlist'\r\nimport CustomerList from '../pages/Customerlist'\r\nimport Addcustomer from '../pages/addcustomer'\r\nimport AddcustomerList from '../pages/addcustomerlist'\r\nimport Addobject from '../pages/bojectadd'\r\nimport Avatar from '../pages/addboject'\r\nimport GiftList from '../pages/giftlist'\r\nimport AddAdmin from '../pages/addAdmin'\r\nimport Admin from '../pages/admin'\r\nimport Index from '../pages/index'\r\nimport BlaskList from '../pages/blacklist'\r\nimport Login from '../pages/login';\r\nimport Auto from '../pages/auto'\r\nimport Myadmin from '../pages/myadmin'\r\nimport UserGifts from '../pages/usergifts'\r\nconst Root=()=>(\r\n\r\n    <HashRouter> \r\n        <Switch>\r\n\r\n            <Route exact  path=\"/\" component={Login}></Route>\r\n            <Route  exact path=\"/index\" component={ObjiectList}></Route>\r\n            <Route  exact path=\"/admin\" component={Admin}></Route>\r\n            <Route  exact path=\"/gifts\" component={GiftList}></Route>\r\n            <Route  exact path=\"/usergifts/:userid/:name\" component={UserGifts}></Route>\r\n            <Route  exact path=\"/auto\" component={Auto}></Route>\r\n            <Route  exact path=\"/myadmin\" component={Myadmin}></Route>\r\n            <Route  exact path=\"/addobject/:id\" component={Addobject}></Route>\r\n            <Route  exact path=\"/customerlist/:id/:page\" component={CustomerList}></Route>\r\n            <Route  exact path=\"/addcustomer/:objid/:id/:page\" component={Addcustomer}></Route>\r\n            <Route  exact path=\"/addcustomerlist/:objid\" component={AddcustomerList}></Route>\r\n            <Route  exact path=\"/blacklist\" component={BlaskList}></Route>\r\n            \r\n        </Switch>\r\n    </HashRouter>\r\n)\r\nexport default Root;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport 'antd/dist/antd.css'\r\nimport { DatePicker } from 'antd';\r\nimport Login from './pages/login'\r\n\r\nimport Index from './pages/index'\r\nimport Root from './router/Router'\r\nimport AddcustomerList  from './pages/addcustomerlist'\r\nimport axios from 'axios';\r\n// axios.defaults.baseURL = 'http://127.0.0.1:8080';\r\nfunction App() {\r\n  return (\r\n    <div style={{ margin: 100 }}>\r\n      <h1>AntDesign Demo</h1>\r\n      <hr /><br />\r\n      <DatePicker />\r\n    </div>\r\n  );\r\n}\r\n\r\nReactDOM.render(<Root />, document.getElementById('root'));\r\n"],"sourceRoot":""}